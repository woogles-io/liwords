// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: entitlements.sql

package models

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getNumberOfBotGames = `-- name: GetNumberOfBotGames :one
select count(id) from games where
(
    (player0_id = $1 and player1_id = $2) or
    (player1_id = $1 and player0_id = $2)
) and created_at >= $3
and game_end_reason not in (5, 7)
`

type GetNumberOfBotGamesParams struct {
	BotID       pgtype.Int4
	UserID      pgtype.Int4
	CreatedDate pgtype.Timestamptz
}

func (q *Queries) GetNumberOfBotGames(ctx context.Context, arg GetNumberOfBotGamesParams) (int64, error) {
	row := q.db.QueryRow(ctx, getNumberOfBotGames, arg.BotID, arg.UserID, arg.CreatedDate)
	var count int64
	err := row.Scan(&count)
	return count, err
}
