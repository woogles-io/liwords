// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: mod.sql

package models

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getNotoriousGames = `-- name: GetNotoriousGames :many
SELECT game_id, type, timestamp FROM notoriousgames
WHERE player_id = $1
ORDER BY timestamp DESC LIMIT $2
`

type GetNotoriousGamesParams struct {
	PlayerID pgtype.Text
	Limit    int32
}

type GetNotoriousGamesRow struct {
	GameID    pgtype.Text
	Type      pgtype.Int4
	Timestamp pgtype.Int8
}

func (q *Queries) GetNotoriousGames(ctx context.Context, arg GetNotoriousGamesParams) ([]GetNotoriousGamesRow, error) {
	rows, err := q.db.Query(ctx, getNotoriousGames, arg.PlayerID, arg.Limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetNotoriousGamesRow
	for rows.Next() {
		var i GetNotoriousGamesRow
		if err := rows.Scan(&i.GameID, &i.Type, &i.Timestamp); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
