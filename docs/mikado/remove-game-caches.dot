digraph RedoGameModel {
    Goal [label = "Redo game model to support\n1) more simultaneous games\n2) less downtime between deploys\n3) make DB faster to back up and query";shape = oval;peripheries = 2;style = bold;];

    // Define a reusable style for "checked nodes"  ✅
    node [shape = box; color = gray; fontcolor = gray; style = dashed;];
    DBGet [label = "Rewrite DB Get to use sqlc ✅";];
    AddOtherTables [label = "Add many2many and turns tables ✅";];
    SQLCDBStore [label = "Rewrite DB store to use sqlc ✅";];
    SQLCOtherFuncs [label = "Rewrite all others to use sqlc ✅";];
    ConsolidateRequestColumns [label = "Consolidate request columns ✅";];
    ImproveMany2ManyTable [label = "Improve many2many table ✅";];
    UseMany2ManyTable [label = "Transparently use many2many table ✅" ;];
    MigrateToMany2ManyTable [label = "Migrate to many2many table ✅";];

    // Reset to default for other uncompleted nodes
    node [shape = box; color = black; fontcolor = black; style = solid;];

    MoreSimultaneousGames [label = "Allow for more simultaneous games than cache limit";];
    LessDowntimeBetweenDeploys [label = "Allow for less downtime between deploys";];
    MakeDBFaster [label = "Make DB faster to query";];

    AddPastGamesTable [label = "Add PastGames table";];
    OnlyUseNewTables [label = "Only use new tables";];
    MigrateToNewTables [label = "Migrate to new tables";];
    UsePastGamesTable [label = "Transparently use PastGames table";];
    RemoveGameCache [label = "Remove game cache";];
    EfficientTable [label = "Make game DB model more efficient";];

    FixGameDocumentBugs [label = "Fix and test GameDocument bugs";];

    DBSetSplit [label = "Split DB Set into separate functions\nthat set specific attributes of game";];

    ReplaceQuickData [label = "Replace QuickData with JOINs";];

    ClearLargeFields [label = "Clear large fields in games table";];
    ImplementS3Archival [label = "Implement S3 archival of old partitions";];
    // Arrows
    Goal -> MoreSimultaneousGames;
    Goal -> LessDowntimeBetweenDeploys;
    Goal -> MakeDBFaster;
    Goal -> ImplementS3Archival;

    MoreSimultaneousGames -> RemoveGameCache;
    LessDowntimeBetweenDeploys -> RemoveGameCache;
    MakeDBFaster -> EfficientTable;

    RemoveGameCache -> EfficientTable;
    OnlyUseNewTables -> ReplaceQuickData;
    OnlyUseNewTables -> MigrateToMany2ManyTable;
    ReplaceQuickData -> MigrateToPastGamesTable;

    MigrateToMany2ManyTable -> UseMany2ManyTable;
    ImproveMany2ManyTable -> AddOtherTables;
    MigrateToPastGamesTable -> UsePastGamesTable;
    AddPastGamesTable -> AddOtherTables;
    EfficientTable -> SQLCDBStore;
    EfficientTable -> DBSetSplit;
    DBSetSplit -> SQLCOtherFuncs;
    UseMany2ManyTable -> ImproveMany2ManyTable;
    UsePastGamesTable -> AddPastGamesTable;
    AddPastGamesTable -> FixGameDocumentBugs;
    SQLCDBStore -> DBGet;
    SQLCDBStore -> SQLCOtherFuncs;
    ConsolidateRequestColumns -> SQLCOtherFuncs;
    EfficientTable -> ConsolidateRequestColumns;
    MakeDBFaster -> ClearLargeFields;
    ClearLargeFields -> OnlyUseNewTables;
    ImplementS3Archival -> ClearLargeFields;
}