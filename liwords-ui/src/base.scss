@use "sass:meta";
// This file and any files it imports should only include definitions (mixins, variables, functions)
@use "color_modes" as *;
@use "sass:math";
@forward "color_modes";

$card-shadow: 0px 0px 12px rgba(0, 0, 0, 0.15);
$card-shadow-lower: 0px 0px 6px rgba(0, 0, 0, 0.15);
$card-padding: 16px;
$card-padding-md: ($card-padding * 0.5);

$header-height-mobile: 96px;
$header-height-desktop: 60px;

$screen-mobile-min: 768px;
$screen-tablet-min: 1024px;
$screen-laptop-min: 1280px;
$screen-desktop-min: 1440px;
$screen-desktop-l-min: 1600px;

@function strip-unit($number) {
  @if meta.type-of($number) == "number" and not math.is-unitless($number) {
    @return math.div($number, $number * 0 + 1);
  }

  @return $number;
}
// Magic that makes variables available to the tsx code
:export {
  colorPrimary: #2d6a9e;
  screenSizeTablet: strip-unit($screen-tablet-min);
  screenSizeLaptop: strip-unit($screen-laptop-min);
  screenSizeDesktop: strip-unit($screen-desktop-min);
}

@function board-size($tile-size) {
  @return calc($tile-size * var(--dim, 15));
}

@function container-size($tile-size) {
  @return calc(($tile-size * var(--dim, 15)) + 24px);
}

$screen-min-height-laptop-min: 680px;
$screen-min-height-desktop-min: 830px;
$screen-min-height-desktop-max: 910px;

$font-deco: "Fjalla One", sans-serif;
$font-default: "Mulish", sans-serif;
$font-monospaced: "Courier Prime", monospace;
$font-tile: "Roboto Mono", monospace;

$tile-size-embed: calc(25px * 15 / var(--dim, 15));
$tile-size-mobile: calc(34px * 15 / var(--dim, 15));
$tile-size-tablet: calc(34px * 15 / var(--dim, 15));
$tile-size-laptop: calc(34px * 15 / var(--dim, 15));
$tile-size-desktop: calc(44px * 15 / var(--dim, 15));

$board-size-embed: board-size($tile-size-embed);
$board-size-mobile: board-size($tile-size-mobile);
$board-size-tablet: board-size($tile-size-tablet);
$board-size-laptop: board-size($tile-size-laptop);
$board-size-desktop: board-size($tile-size-desktop);

$main-container-width-embed: calc($board-size-embed + 12px);
$main-container-width-mobile: calc($board-size-mobile + 24px);
$main-container-width-tablet: calc($board-size-tablet + 24px);
$main-container-width-laptop: calc($board-size-laptop + 24px);
$main-container-width-desktop: calc($board-size-desktop + 24px);

$sidebar-width-tablet: calc((100% - #{$main-container-width-laptop}) - 24px);
$sidebar-width-laptop: calc(
  (100% - #{$main-container-width-laptop}) / 2 - 12px
);
$sidebar-width-desktop: calc(
  (100% - #{$main-container-width-desktop}) / 2 - 12px
);

$settings-width: calc(35%);

$tile-font-size-embed: calc($tile-size-embed * 0.68);
$tile-font-size-mobile: calc($tile-size-mobile * 0.68);
$tile-font-size-tablet: calc($tile-size-tablet * 0.68);
$tile-font-size-laptop: calc($tile-size-laptop * 0.68);
$tile-font-size-desktop: calc($tile-size-desktop * 0.68);

$point-size-embed: calc($tile-font-size-embed / 3.3);
$point-size-mobile: calc($tile-font-size-mobile / 3.1);
$point-size-tablet: calc($tile-font-size-tablet / 2.6);
$point-size-laptop: calc($tile-font-size-laptop / 2.8);
$point-size-desktop: calc($tile-font-size-desktop / 2.8);

@mixin container {
  width: 100%;
  max-width: $main-container-width-mobile;
  position: relative;
  margin: 0 auto;
  padding: 0 12px;
  @media (min-width: $screen-tablet-min) {
    max-width: calc($main-container-width-tablet * 2);
  }
  @media (min-width: $screen-laptop-min) {
    max-width: $screen-desktop-l-min;
  }
}

@mixin type-default {
  font-family: $font-default;
  font-style: normal;
  font-size: 14px;
  line-height: 18px;
  @include colorModed() {
    color: m($gray-extreme);
  }
}

@mixin type-monospace {
  font-family: $font-monospaced;
  font-style: normal;
  font-size: 14px;
  line-height: 18px;
}

@mixin type-title {
  font-family: $font-default;
  font-style: normal;
  font-size: 16px;
  font-weight: bold;
  line-height: 1.25em;
}

@mixin type-deco {
  font-family: Fjalla One;
  font-style: normal;
  font-weight: normal;
  font-size: 24px;
  line-height: 1.5em;
  letter-spacing: 0.15em;
}

@mixin type-link {
  font-family: $font-default;
  font-style: normal;
  font-weight: bold;
  font-size: 12px;
  line-height: 2em;
  text-align: center;
}

@mixin action-blocks {
  padding-bottom: 64px;
  .ant-card-body {
    max-height: 100%;
    overflow-y: auto;
  }
  .ant-card-actions {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 64px;
    background: transparent;
    @include colorModed() {
      border-top: 1px solid m($off-background);
    }
    li {
      cursor: pointer;
      margin: 0;
      height: 100%;
      border: 0;
      @include colorModed() {
        background: m($background);
        color: m($gray-extreme);
      }
      & {
        @include type-link;
      }
      span {
        transition: none !important;
        width: 100%;
        height: 100%;
        a:not(.ant-btn) {
          @include colorModed() {
            color: m($primary-dark);
          }
        }
      }
      div {
        display: flex;
        align-items: center;
        justify-content: center;
        @include colorModed() {
          color: m($gray-extreme);
        }
        & {
          font-size: 14px;
          width: 100%;
          height: 100%;
        }
      }
      &:hover div {
        @include colorModed() {
          color: m($primary-dark);
        }
      }
      &:nth-child(2) {
        @include colorModed() {
          background: m($primary-light);
        }
      }
      &:nth-child(3),
      &:only-child {
        @include colorModed() {
          background: m($primary-dark);
        }
        div {
          @include colorModed() {
            color: m($background);
          }
        }
        &:hover div {
          @include colorModed() {
            color: m($primary-middle);
          }
        }
      }
      &:first-child {
        border-radius: 0 0 0 8px;
      }
      &:last-child {
        border-radius: 0 0 8px 0;
      }
      &:only-child {
        border-radius: 0 0 8px 8px;
      }
    }
  }
}
@mixin tabs {
  .ant-tabs {
    overflow: visible;
    .ant-tabs-ink-bar {
      @include colorModed() {
        background: m($primary-dark);
      }
    }
    &.ant-tabs-top .ant-tabs-nav::before {
      @include colorModed() {
        border-bottom: 1px solid m($off-background);
      }
    }
    .ant-tabs-nav {
      margin: 0;
      @include colorModed() {
        border-bottom: 1px solid m($off-background);
      }
      .ant-tabs-nav-list {
        width: 100%;
        justify-content: space-evenly;
      }
    }
    .ant-tabs-tab {
      justify-content: center;
      padding: 12px 16px;
      margin: 0;
      text-transform: uppercase;
      @include colorModed() {
        color: m($gray-extreme);
      }
      .ant-tabs-tab-btn {
        @include type-link;
        letter-spacing: 0.16em;
        display: flex;
        flex-wrap: nowrap;
        align-items: center;
      }
      &:active,
      &:hover,
      &.ant-tabs-tab-active {
        .ant-tabs-tab-btn {
          @include colorModed() {
            color: m($primary-dark);
          }
        }
      }
    }
  }
  .ant-tabs > .ant-tabs-nav .ant-tabs-nav-operations,
  .ant-tabs > div > .ant-tabs-nav .ant-tabs-nav-operations {
    display: none;
  }
}
@mixin modal {
  .ant-modal-root {
    .ant-modal-content {
      border-radius: 8px;
      font-family: "Mulish", sans-serif;
      @include colorModed() {
        background: m($background);
        color: m($gray-extreme);
      }
    }
    .ant-modal-header {
      border-radius: 8px 8px 0 0;
      @include colorModed() {
        background: m($background);
        color: m($gray-extreme);
      }
      .ant-modal-title {
        font-family: "Mulish", sans-serif;
        font-weight: 700;
        @include colorModed() {
          color: m($gray-extreme);
        }
      }
    }
    .ant-modal-footer {
      border: 0;
    }
    @media (max-width: $screen-mobile-min+1) {
      .ant-modal-mask {
        @include colorModed() {
          background: m($background);
        }
      }
      .ant-modal {
        margin: unset;
        max-width: unset;
        top: 0;
        .ant-modal-content {
          height: 100vh;
          width: 100vw;
          box-shadow: none;
          padding-bottom: 48px;
        }
        .ant-modal-header {
          border-radius: 0;
        }
        .ant-modal-footer,
        .ant-modal-confirm-btns {
          position: fixed;
          bottom: 0;
          left: 0;
          width: 100vw;
          flex-direction: column;
          padding: 12px;
          button,
          button.ant-btn {
            width: 100%;
            margin: 6px 0;
          }
        }
      }
    }
  }
}
@mixin button {
  /* buttons */
  button.ant-btn,
  button.primary,
  a.btn-primary,
  button.ant-btn-primary,
  .ant-modal-root button.ant-btn-secondary {
    touch-action: manipulation;
    font-family: $font-default;
    font-size: 12px;
    height: 36px;
    font-weight: 800;
    transition: none;
    margin: 0 6px;
    @include colorModed() {
      background-color: m($background);
      border-color: m($primary-dark);
      color: m($primary-dark);
    }
    &:not(.ant-btn-circle) {
      padding: 3px 18px;
    }

    span.key-command {
      position: absolute;
      top: 0;
      right: 0;
      padding: 0 4px;
      font-size: 10px;
      opacity: 0;
    }
    &,
    &:hover,
    &:focus,
    &:visited,
    &:active {
      transition: none;
      @include colorModed() {
        background-color: m($background);
        border-color: m($primary-dark);
        color: m($primary-dark);
      }
    }
    &:disabled {
      @include colorModed() {
        border-color: m($gray-subtle);
        color: m($gray-subtle);
      }
    }
    &:not([disabled]):hover {
      span.key-command {
        opacity: 1;
      }
    }
  }

  button.ant-modal-close {
    transition: none;
  }

  button.ant-btn-circle {
    height: 32px;
  }

  button.ant-btn-primary,
  button.primary,
  a.btn-primary {
    margin: 6px 3px;
    @include colorModed() {
      background-color: m($button);
      color: m($button-text);
    }
    & {
      border: 0;
      outline: 0;
      transition: none;
      cursor: pointer;
    }
    &:not(.ant-btn-circle) {
      border-radius: 3px;
    }
    &.ant-btn-dangerous {
      &,
      &:hover,
      &:focus,
      &:visited,
      &:active {
        @include colorModed() {
          background: m($timer-out-dark);
          border: m($timer-out-dark);
        }
        & {
          transition: none;
        }
      }
    }
    &,
    &:hover,
    &:focus,
    &:visited,
    &:active {
      @include colorModed() {
        background-color: m($button);
        color: m($button-text);
      }
      & {
        transition: none;
      }
    }
    &:disabled,
    &:disabled:hover {
      @include colorModed() {
        background-color: m($gray-subtle);
        color: m($background);
      }
    }
  }
}

@mixin notification {
  .ant-message {
    pointer-events: none;
  }
  .ant-notification,
  .ant-message {
    .ant-notification-notice,
    .ant-message-notice-content,
    a {
      font-family: $font-default;
      font-style: normal;
      line-height: 18px;
      font-size: 15px;
      font-weight: 600;
      letter-spacing: 0.06em;
      .ant-notification-notice-message {
        font-weight: 700;
        max-width: 80%;
      }

      .ant-notification-notice-description p {
        padding-right: 12px;
      }
      span.message-action {
        font-weight: 700;
        text-decoration: underline;
        cursor: pointer;
      }
      //   .anticon {
      //     @include colorModed() {
      //       color: m($primary-light);
      //     }
      //   }
    }
    button.ant-btn,
    button.ant-btn-primary,
    button.primary,
    a.btn-primary {
      box-shadow: none;
      font-size: 14px;
      //   @include colorModed() {
      //     background-color: transparent;
      //     border-color: m($background);
      //     color: m($background);
      //   }
    }
  }
}

.ant-popconfirm-buttons > .ant-btn-sm {
  height: 36px;
}
