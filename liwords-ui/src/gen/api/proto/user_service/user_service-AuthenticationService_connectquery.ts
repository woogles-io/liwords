// @generated by protoc-gen-connect-query v2.1.1 with parameter "target=ts"
// @generated from file proto/user_service/user_service.proto (package user_service, syntax proto3)
/* eslint-disable */

import { AuthenticationService } from "./user_service_pb";

/**
 * @generated from rpc user_service.AuthenticationService.Login
 */
export const login = AuthenticationService.method.login;

/**
 * @generated from rpc user_service.AuthenticationService.Logout
 */
export const logout = AuthenticationService.method.logout;

/**
 * @generated from rpc user_service.AuthenticationService.GetSocketToken
 */
export const getSocketToken = AuthenticationService.method.getSocketToken;

/**
 * @generated from rpc user_service.AuthenticationService.ResetPasswordStep1
 */
export const resetPasswordStep1 = AuthenticationService.method.resetPasswordStep1;

/**
 * @generated from rpc user_service.AuthenticationService.ResetPasswordStep2
 */
export const resetPasswordStep2 = AuthenticationService.method.resetPasswordStep2;

/**
 * @generated from rpc user_service.AuthenticationService.ChangePassword
 */
export const changePassword = AuthenticationService.method.changePassword;

/**
 * @generated from rpc user_service.AuthenticationService.NotifyAccountClosure
 */
export const notifyAccountClosure = AuthenticationService.method.notifyAccountClosure;

/**
 * These two temporary endpoints for migrating everyone to naked domain:
 *
 * @generated from rpc user_service.AuthenticationService.GetSignedCookie
 */
export const getSignedCookie = AuthenticationService.method.getSignedCookie;

/**
 * @generated from rpc user_service.AuthenticationService.InstallSignedCookie
 */
export const installSignedCookie = AuthenticationService.method.installSignedCookie;

/**
 * @generated from rpc user_service.AuthenticationService.GetAPIKey
 */
export const getAPIKey = AuthenticationService.method.getAPIKey;
