// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file proto/ipc/errors.proto (package ipc, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/ipc/errors.proto.
 */
export const file_proto_ipc_errors: GenFile = /*@__PURE__*/
  fileDesc("ChZwcm90by9pcGMvZXJyb3JzLnByb3RvEgNpcGMiHwoMRXJyb3JNZXNzYWdlEg8KB21lc3NhZ2UYASABKAkq9B4KDFdvb2dsZXNFcnJvchILCgdERUZBVUxUEAASKgolVE9VUk5BTUVOVF9ORUdBVElWRV9NQVhfQllFX1BMQUNFTUVOVBDpBxImCiFUT1VSTkFNRU5UX05FR0FUSVZFX01JTl9QTEFDRU1FTlQQ6gcSJgohVE9VUk5BTUVOVF9ORUdBVElWRV9HSUJTT05fU1BSRUFEEOsHEiQKH1RPVVJOQU1FTlRfRU1QVFlfUk9VTkRfQ09OVFJPTFMQ7AcSLgopVE9VUk5BTUVOVF9TRVRfUk9VTkRfQ09OVFJPTFNfQUZURVJfU1RBUlQQ7QcSKAojVE9VUk5BTUVOVF9FTElNSU5BVElPTl9QQUlSSU5HU19NSVgQ7gcSLAonVE9VUk5BTUVOVF9ESVNDT05USU5VT1VTX0lOSVRJQUxfRk9OVEVTEO8HEi0KKFRPVVJOQU1FTlRfSU5WQUxJRF9JTklUSUFMX0ZPTlRFU19ST1VORFMQ8AcSKwomVE9VUk5BTUVOVF9JTlZBTElEX0VMSU1JTkFUSU9OX1BMQVlFUlMQ8QcSKQokVE9VUk5BTUVOVF9ST1VORF9OVU1CRVJfT1VUX09GX1JBTkdFEPIHEiIKHVRPVVJOQU1FTlRfTk9ORVhJU1RFTlRfUExBWUVSEPMHEigKI1RPVVJOQU1FTlRfTk9OQU1FTkRNRU5UX1BBU1RfUkVTVUxUEPQHEiQKH1RPVVJOQU1FTlRfRlVUVVJFX05PTkJZRV9SRVNVTFQQ9QcSIgodVE9VUk5BTUVOVF9OSUxfUExBWUVSX1BBSVJJTkcQ9gcSHAoXVE9VUk5BTUVOVF9OT05PUFBPTkVOVFMQ9wcSLgopVE9VUk5BTUVOVF9NSVhFRF9WT0lEX0FORF9OT05WT0lEX1JFU1VMVFMQ+AcSIwoeVE9VUk5BTUVOVF9OT05FWElTVEVOVF9QQUlSSU5HEPkHEiMKHlRPVVJOQU1FTlRfVU5JTklUSUFMSVpFRF9HQU1FUxD6BxIrCiZUT1VSTkFNRU5UX1RJRUJSRUFLX0lOVkFMSURfR0FNRV9JTkRFWBD7BxInCiJUT1VSTkFNRU5UX0dBTUVfSU5ERVhfT1VUX09GX1JBTkdFEPwHEigKI1RPVVJOQU1FTlRfUkVTVUxUX0FMUkVBRFlfU1VCTUlUVEVEEP0HEiwKJ1RPVVJOQU1FTlRfTk9ORVhJU1RFTlRfUkVTVUxUX0FNRU5ETUVOVBD+BxIgChtUT1VSTkFNRU5UX0dJQlNPTl9DQU5fQ0FUQ0gQ/wcSIQocVE9VUk5BTUVOVF9DQU5OT1RfQVNTSUdOX0JZRRCACBInCiJUT1VSTkFNRU5UX0lOVEVSTkFMX0JZRV9BU1NJR05NRU5UEIEIEikKJFRPVVJOQU1FTlRfSU5DT1JSRUNUX1BBSVJJTkdTX0xFTkdUSBCCCBIlCiBUT1VSTkFNRU5UX1BBSVJJTkdTX0FTU0lHTkVEX0JZRRCDCBIqCiVUT1VSTkFNRU5UX1NVU1BFTkRFRF9QTEFZRVJfVU5SRU1PVkVEEIQIEioKJVRPVVJOQU1FTlRfUEFJUklOR19JTkRFWF9PVVRfT0ZfUkFOR0UQhQgSJwoiVE9VUk5BTUVOVF9TVVNQRU5ERURfUExBWUVSX1BBSVJFRBCGCBIhChxUT1VSTkFNRU5UX1BMQVlFUl9OT1RfUEFJUkVEEIcIEiUKIFRPVVJOQU1FTlRfUExBWUVSX0FMUkVBRFlfRVhJU1RTEIgIEiYKIVRPVVJOQU1FTlRfQUREX1BMQVlFUlNfTEFTVF9ST1VORBCJCBIpCiRUT1VSTkFNRU5UX1BMQVlFUl9JTkRFWF9PVVRfT0ZfUkFOR0UQiggSJgohVE9VUk5BTUVOVF9QTEFZRVJfQUxSRUFEWV9SRU1PVkVEEIsIEi4KKVRPVVJOQU1FTlRfUkVNT1ZBTF9DUkVBVEVTX0VNUFRZX0RJVklTSU9OEIwIEiUKIFRPVVJOQU1FTlRfTkVHQVRJVkVfR0lCU09OX1JPVU5EEI0IEiIKHVRPVVJOQU1FTlRfUk9VTkRfTk9UX0NPTVBMRVRFEI4IEhgKE1RPVVJOQU1FTlRfRklOSVNIRUQQjwgSHQoYVE9VUk5BTUVOVF9OT1RfU1RBUlRBQkxFEJAIEh8KGlRPVVJOQU1FTlRfUk9VTkRfTk9UX1JFQURZEJEIEiUKIFRPVVJOQU1FTlRfU0VUX0dBTUVfUk9VTkRfTlVNQkVSEJIIEh0KGFRPVVJOQU1FTlRfQUxSRUFEWV9SRUFEWRCTCBImCiFUT1VSTkFNRU5UX1NFVF9SRUFEWV9NVUxUSVBMRV9JRFMQlAgSKgolVE9VUk5BTUVOVF9TRVRfUkVBRFlfUExBWUVSX05PVF9GT1VORBCVCBIYChNUT1VSTkFNRU5UX05PX0xPU0VSEJYIEhkKFFRPVVJOQU1FTlRfTk9fV0lOTkVSEJcIEh8KGlRPVVJOQU1FTlRfVU5QQUlSRURfUExBWUVSEJgIEh8KGlRPVVJOQU1FTlRfSU5WQUxJRF9QQUlSSU5HEJkIEh0KGFRPVVJOQU1FTlRfSU5WQUxJRF9TV0lTUxCaCBIkCh9UT1VSTkFNRU5UX1pFUk9fR0FNRVNfUEVSX1JPVU5EEJsIEhoKFVRPVVJOQU1FTlRfRU1QVFlfTkFNRRCcCBIbChZUT1VSTkFNRU5UX05PVF9TVEFSVEVEEJ0IEiQKH1RPVVJOQU1FTlRfTk9ORVhJU1RFTlRfRElWSVNJT04QnggSJAofVE9VUk5BTUVOVF9OSUxfRElWSVNJT05fTUFOQUdFUhCfCBItCihUT1VSTkFNRU5UX1NFVF9OT05fRlVUVVJFX1JPVU5EX0NPTlRST0xTEKAIEigKI1RPVVJOQU1FTlRfQUREX0RJVklTSU9OX0FGVEVSX1NUQVJUEKEIEiUKIFRPVVJOQU1FTlRfSU5WQUxJRF9ESVZJU0lPTl9OQU1FEKIIEicKIlRPVVJOQU1FTlRfRElWSVNJT05fQUxSRUFEWV9FWElTVFMQowgSLAonVE9VUk5BTUVOVF9ESVZJU0lPTl9SRU1PVkFMX0FGVEVSX1NUQVJUEKQIEjEKLFRPVVJOQU1FTlRfRElWSVNJT05fUkVNT1ZBTF9FWElTVElOR19QTEFZRVJTEKUIEiYKIVRPVVJOQU1FTlRfUExBWUVSX0lEX0NPTlNUUlVDVElPThCmCBIpCiRUT1VSTkFNRU5UX0VYRUNVVElWRV9ESVJFQ1RPUl9FWElTVFMQpwgSHwoaVE9VUk5BTUVOVF9ESVJFQ1RPUl9FWElTVFMQqAgSHAoXVE9VUk5BTUVOVF9OT19ESVZJU0lPTlMQqQgSJQogVE9VUk5BTUVOVF9HQU1FX0NPTlRST0xTX05PVF9TRVQQqggSJQogVE9VUk5BTUVOVF9JTkNPUlJFQ1RfU1RBUlRfUk9VTkQQqwgSJQogVE9VUk5BTUVOVF9QQUlSX05PTl9GVVRVUkVfUk9VTkQQrAgSJwoiVE9VUk5BTUVOVF9ERUxFVEVfTk9OX0ZVVFVSRV9ST1VORBCtCBIlCiBUT1VSTkFNRU5UX0RJVklTSU9OX05PVF9GSU5JU0hFRBCuCBIyCi1UT1VSTkFNRU5UX05PVF9FWEFDVExZX09ORV9FWEVDVVRJVkVfRElSRUNUT1IQrwgSKgolVE9VUk5BTUVOVF9FWEVDVVRJVkVfRElSRUNUT1JfUkVNT1ZBTBCwCBIlCiBUT1VSTkFNRU5UX0lOVkFMSURfRlVUVVJFX1JFU1VMVBCxCBIpCiRUT1VSTkFNRU5UX1NDSEVEVUxFRF9TVEFSVF9BRlRFUl9FTkQQwggSHAoXVE9VUk5BTUVOVF9OT1RfRklOSVNIRUQQwwgSKAojVE9VUk5BTUVOVF9PUEVOQ0hFQ0tJTlNfQUZURVJfU1RBUlQQxAgSHwoaVE9VUk5BTUVOVF9DSEVDS0lOU19DTE9TRUQQxQgSHgoZVE9VUk5BTUVOVF9OT1RfUkVHSVNURVJFRBDGCBIkCh9UT1VSTkFNRU5UX1JFR0lTVFJBVElPTlNfQ0xPU0VEEMcIEh8KGlRPVVJOQU1FTlRfQUxSRUFEWV9TVEFSVEVEEMgIEi0KKFRPVVJOQU1FTlRfT1BFTlJFR0lTVFJBVElPTlNfQUZURVJfU1RBUlQQyQgSOwo2VE9VUk5BTUVOVF9DQU5OT1RfU1RBUlRfQ0hFQ0tJTlNfT1JfUkVHSVNUUkFUSU9OU19PUEVOEMoIEjsKNlRPVVJOQU1FTlRfQ0FOTk9UX1JFTU9WRV9VTkNIRUNLRURfSU5fSUZfQ0hFQ0tJTlNfT1BFThDLCBIYChNQVVpaTEVfVk9URV9JTlZBTElEELIIEioKJVBVWlpMRV9HRVRfUkFORE9NX1BVWlpMRV9JRF9OT1RfRk9VTkQQswgSJwoiUFVaWkxFX0dFVF9SQU5ET01fUFVaWkxFX05PVF9GT1VORBC0CBIlCiBQVVpaTEVfR0VUX1BVWlpMRV9VVUlEX05PVF9GT1VORBC1CBIrCiZQVVpaTEVfR0VUX1BSRVZJT1VTX1BVWlpMRV9OT19BVFRFTVBUUxC2CBIxCixQVVpaTEVfR0VUX1BSRVZJT1VTX1BVWlpMRV9BVFRFTVBUX05PVF9GT1VORBC3CBIsCidQVVpaTEVfR0VUX0FOU1dFUl9QVVpaTEVfVVVJRF9OT1RfRk9VTkQQuAgSLQooUFVaWkxFX1NVQk1JVF9BTlNXRVJfUFVaWkxFX0lEX05PVF9GT1VORBC5CBIlCiBQVVpaTEVfU1VCTUlUX0FOU1dFUl9TRVRfQ09SUkVDVBC6CBImCiFQVVpaTEVfU1VCTUlUX0FOU1dFUl9TRVRfQVRURU1QVFMQuwgSKAojUFVaWkxFX1NFVF9QVVpaTEVfVk9URV9JRF9OT1RfRk9VTkQQvAgSMgotUFVaWkxFX1NVQk1JVF9BTlNXRVJfUFVaWkxFX0FUVEVNUFRfTk9UX0ZPVU5EEL0IEiUKIFBVWlpMRV9HRVRfUFVaWkxFX1VQREFURV9BVFRFTVBUEL4IEiQKH1BVWlpMRV9HRVRfQU5TV0VSX05PVF9ZRVRfUkFURUQQvwgSGgoVVVNFUl9VUERBVEVfTk9UX0ZPVU5EEMAIEh0KGEdBTUVfTk9fTE9OR0VSX0FWQUlMQUJMRRDBCEJzCgdjb20uaXBjQgtFcnJvcnNQcm90b1ABWi9naXRodWIuY29tL3dvb2dsZXMtaW8vbGl3b3Jkcy9ycGMvYXBpL3Byb3RvL2lwY6ICA0lYWKoCA0lwY8oCA0lwY+ICD0lwY1xHUEJNZXRhZGF0YeoCA0lwY2IGcHJvdG8z");

/**
 * @generated from message ipc.ErrorMessage
 */
export type ErrorMessage = Message<"ipc.ErrorMessage"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message ipc.ErrorMessage.
 * Use `create(ErrorMessageSchema)` to create a new message.
 */
export const ErrorMessageSchema: GenMessage<ErrorMessage> = /*@__PURE__*/
  messageDesc(file_proto_ipc_errors, 0);

/**
 * @generated from enum ipc.WooglesError
 */
export enum WooglesError {
  /**
   * @generated from enum value: DEFAULT = 0;
   */
  DEFAULT = 0,

  /**
   * @generated from enum value: TOURNAMENT_NEGATIVE_MAX_BYE_PLACEMENT = 1001;
   */
  TOURNAMENT_NEGATIVE_MAX_BYE_PLACEMENT = 1001,

  /**
   * @generated from enum value: TOURNAMENT_NEGATIVE_MIN_PLACEMENT = 1002;
   */
  TOURNAMENT_NEGATIVE_MIN_PLACEMENT = 1002,

  /**
   * @generated from enum value: TOURNAMENT_NEGATIVE_GIBSON_SPREAD = 1003;
   */
  TOURNAMENT_NEGATIVE_GIBSON_SPREAD = 1003,

  /**
   * @generated from enum value: TOURNAMENT_EMPTY_ROUND_CONTROLS = 1004;
   */
  TOURNAMENT_EMPTY_ROUND_CONTROLS = 1004,

  /**
   * @generated from enum value: TOURNAMENT_SET_ROUND_CONTROLS_AFTER_START = 1005;
   */
  TOURNAMENT_SET_ROUND_CONTROLS_AFTER_START = 1005,

  /**
   * @generated from enum value: TOURNAMENT_ELIMINATION_PAIRINGS_MIX = 1006;
   */
  TOURNAMENT_ELIMINATION_PAIRINGS_MIX = 1006,

  /**
   * @generated from enum value: TOURNAMENT_DISCONTINUOUS_INITIAL_FONTES = 1007;
   */
  TOURNAMENT_DISCONTINUOUS_INITIAL_FONTES = 1007,

  /**
   * @generated from enum value: TOURNAMENT_INVALID_INITIAL_FONTES_ROUNDS = 1008;
   */
  TOURNAMENT_INVALID_INITIAL_FONTES_ROUNDS = 1008,

  /**
   * @generated from enum value: TOURNAMENT_INVALID_ELIMINATION_PLAYERS = 1009;
   */
  TOURNAMENT_INVALID_ELIMINATION_PLAYERS = 1009,

  /**
   * @generated from enum value: TOURNAMENT_ROUND_NUMBER_OUT_OF_RANGE = 1010;
   */
  TOURNAMENT_ROUND_NUMBER_OUT_OF_RANGE = 1010,

  /**
   * @generated from enum value: TOURNAMENT_NONEXISTENT_PLAYER = 1011;
   */
  TOURNAMENT_NONEXISTENT_PLAYER = 1011,

  /**
   * @generated from enum value: TOURNAMENT_NONAMENDMENT_PAST_RESULT = 1012;
   */
  TOURNAMENT_NONAMENDMENT_PAST_RESULT = 1012,

  /**
   * @generated from enum value: TOURNAMENT_FUTURE_NONBYE_RESULT = 1013;
   */
  TOURNAMENT_FUTURE_NONBYE_RESULT = 1013,

  /**
   * @generated from enum value: TOURNAMENT_NIL_PLAYER_PAIRING = 1014;
   */
  TOURNAMENT_NIL_PLAYER_PAIRING = 1014,

  /**
   * @generated from enum value: TOURNAMENT_NONOPPONENTS = 1015;
   */
  TOURNAMENT_NONOPPONENTS = 1015,

  /**
   * @generated from enum value: TOURNAMENT_MIXED_VOID_AND_NONVOID_RESULTS = 1016;
   */
  TOURNAMENT_MIXED_VOID_AND_NONVOID_RESULTS = 1016,

  /**
   * @generated from enum value: TOURNAMENT_NONEXISTENT_PAIRING = 1017;
   */
  TOURNAMENT_NONEXISTENT_PAIRING = 1017,

  /**
   * @generated from enum value: TOURNAMENT_UNINITIALIZED_GAMES = 1018;
   */
  TOURNAMENT_UNINITIALIZED_GAMES = 1018,

  /**
   * @generated from enum value: TOURNAMENT_TIEBREAK_INVALID_GAME_INDEX = 1019;
   */
  TOURNAMENT_TIEBREAK_INVALID_GAME_INDEX = 1019,

  /**
   * @generated from enum value: TOURNAMENT_GAME_INDEX_OUT_OF_RANGE = 1020;
   */
  TOURNAMENT_GAME_INDEX_OUT_OF_RANGE = 1020,

  /**
   * @generated from enum value: TOURNAMENT_RESULT_ALREADY_SUBMITTED = 1021;
   */
  TOURNAMENT_RESULT_ALREADY_SUBMITTED = 1021,

  /**
   * @generated from enum value: TOURNAMENT_NONEXISTENT_RESULT_AMENDMENT = 1022;
   */
  TOURNAMENT_NONEXISTENT_RESULT_AMENDMENT = 1022,

  /**
   * @generated from enum value: TOURNAMENT_GIBSON_CAN_CATCH = 1023;
   */
  TOURNAMENT_GIBSON_CAN_CATCH = 1023,

  /**
   * @generated from enum value: TOURNAMENT_CANNOT_ASSIGN_BYE = 1024;
   */
  TOURNAMENT_CANNOT_ASSIGN_BYE = 1024,

  /**
   * @generated from enum value: TOURNAMENT_INTERNAL_BYE_ASSIGNMENT = 1025;
   */
  TOURNAMENT_INTERNAL_BYE_ASSIGNMENT = 1025,

  /**
   * @generated from enum value: TOURNAMENT_INCORRECT_PAIRINGS_LENGTH = 1026;
   */
  TOURNAMENT_INCORRECT_PAIRINGS_LENGTH = 1026,

  /**
   * @generated from enum value: TOURNAMENT_PAIRINGS_ASSIGNED_BYE = 1027;
   */
  TOURNAMENT_PAIRINGS_ASSIGNED_BYE = 1027,

  /**
   * @generated from enum value: TOURNAMENT_SUSPENDED_PLAYER_UNREMOVED = 1028;
   */
  TOURNAMENT_SUSPENDED_PLAYER_UNREMOVED = 1028,

  /**
   * @generated from enum value: TOURNAMENT_PAIRING_INDEX_OUT_OF_RANGE = 1029;
   */
  TOURNAMENT_PAIRING_INDEX_OUT_OF_RANGE = 1029,

  /**
   * @generated from enum value: TOURNAMENT_SUSPENDED_PLAYER_PAIRED = 1030;
   */
  TOURNAMENT_SUSPENDED_PLAYER_PAIRED = 1030,

  /**
   * @generated from enum value: TOURNAMENT_PLAYER_NOT_PAIRED = 1031;
   */
  TOURNAMENT_PLAYER_NOT_PAIRED = 1031,

  /**
   * @generated from enum value: TOURNAMENT_PLAYER_ALREADY_EXISTS = 1032;
   */
  TOURNAMENT_PLAYER_ALREADY_EXISTS = 1032,

  /**
   * @generated from enum value: TOURNAMENT_ADD_PLAYERS_LAST_ROUND = 1033;
   */
  TOURNAMENT_ADD_PLAYERS_LAST_ROUND = 1033,

  /**
   * @generated from enum value: TOURNAMENT_PLAYER_INDEX_OUT_OF_RANGE = 1034;
   */
  TOURNAMENT_PLAYER_INDEX_OUT_OF_RANGE = 1034,

  /**
   * @generated from enum value: TOURNAMENT_PLAYER_ALREADY_REMOVED = 1035;
   */
  TOURNAMENT_PLAYER_ALREADY_REMOVED = 1035,

  /**
   * @generated from enum value: TOURNAMENT_REMOVAL_CREATES_EMPTY_DIVISION = 1036;
   */
  TOURNAMENT_REMOVAL_CREATES_EMPTY_DIVISION = 1036,

  /**
   * @generated from enum value: TOURNAMENT_NEGATIVE_GIBSON_ROUND = 1037;
   */
  TOURNAMENT_NEGATIVE_GIBSON_ROUND = 1037,

  /**
   * @generated from enum value: TOURNAMENT_ROUND_NOT_COMPLETE = 1038;
   */
  TOURNAMENT_ROUND_NOT_COMPLETE = 1038,

  /**
   * @generated from enum value: TOURNAMENT_FINISHED = 1039;
   */
  TOURNAMENT_FINISHED = 1039,

  /**
   * @generated from enum value: TOURNAMENT_NOT_STARTABLE = 1040;
   */
  TOURNAMENT_NOT_STARTABLE = 1040,

  /**
   * @generated from enum value: TOURNAMENT_ROUND_NOT_READY = 1041;
   */
  TOURNAMENT_ROUND_NOT_READY = 1041,

  /**
   * @generated from enum value: TOURNAMENT_SET_GAME_ROUND_NUMBER = 1042;
   */
  TOURNAMENT_SET_GAME_ROUND_NUMBER = 1042,

  /**
   * @generated from enum value: TOURNAMENT_ALREADY_READY = 1043;
   */
  TOURNAMENT_ALREADY_READY = 1043,

  /**
   * @generated from enum value: TOURNAMENT_SET_READY_MULTIPLE_IDS = 1044;
   */
  TOURNAMENT_SET_READY_MULTIPLE_IDS = 1044,

  /**
   * @generated from enum value: TOURNAMENT_SET_READY_PLAYER_NOT_FOUND = 1045;
   */
  TOURNAMENT_SET_READY_PLAYER_NOT_FOUND = 1045,

  /**
   * @generated from enum value: TOURNAMENT_NO_LOSER = 1046;
   */
  TOURNAMENT_NO_LOSER = 1046,

  /**
   * @generated from enum value: TOURNAMENT_NO_WINNER = 1047;
   */
  TOURNAMENT_NO_WINNER = 1047,

  /**
   * @generated from enum value: TOURNAMENT_UNPAIRED_PLAYER = 1048;
   */
  TOURNAMENT_UNPAIRED_PLAYER = 1048,

  /**
   * @generated from enum value: TOURNAMENT_INVALID_PAIRING = 1049;
   */
  TOURNAMENT_INVALID_PAIRING = 1049,

  /**
   * @generated from enum value: TOURNAMENT_INVALID_SWISS = 1050;
   */
  TOURNAMENT_INVALID_SWISS = 1050,

  /**
   * @generated from enum value: TOURNAMENT_ZERO_GAMES_PER_ROUND = 1051;
   */
  TOURNAMENT_ZERO_GAMES_PER_ROUND = 1051,

  /**
   * @generated from enum value: TOURNAMENT_EMPTY_NAME = 1052;
   */
  TOURNAMENT_EMPTY_NAME = 1052,

  /**
   * @generated from enum value: TOURNAMENT_NOT_STARTED = 1053;
   */
  TOURNAMENT_NOT_STARTED = 1053,

  /**
   * @generated from enum value: TOURNAMENT_NONEXISTENT_DIVISION = 1054;
   */
  TOURNAMENT_NONEXISTENT_DIVISION = 1054,

  /**
   * @generated from enum value: TOURNAMENT_NIL_DIVISION_MANAGER = 1055;
   */
  TOURNAMENT_NIL_DIVISION_MANAGER = 1055,

  /**
   * @generated from enum value: TOURNAMENT_SET_NON_FUTURE_ROUND_CONTROLS = 1056;
   */
  TOURNAMENT_SET_NON_FUTURE_ROUND_CONTROLS = 1056,

  /**
   * @generated from enum value: TOURNAMENT_ADD_DIVISION_AFTER_START = 1057;
   */
  TOURNAMENT_ADD_DIVISION_AFTER_START = 1057,

  /**
   * @generated from enum value: TOURNAMENT_INVALID_DIVISION_NAME = 1058;
   */
  TOURNAMENT_INVALID_DIVISION_NAME = 1058,

  /**
   * @generated from enum value: TOURNAMENT_DIVISION_ALREADY_EXISTS = 1059;
   */
  TOURNAMENT_DIVISION_ALREADY_EXISTS = 1059,

  /**
   * @generated from enum value: TOURNAMENT_DIVISION_REMOVAL_AFTER_START = 1060;
   */
  TOURNAMENT_DIVISION_REMOVAL_AFTER_START = 1060,

  /**
   * @generated from enum value: TOURNAMENT_DIVISION_REMOVAL_EXISTING_PLAYERS = 1061;
   */
  TOURNAMENT_DIVISION_REMOVAL_EXISTING_PLAYERS = 1061,

  /**
   * @generated from enum value: TOURNAMENT_PLAYER_ID_CONSTRUCTION = 1062;
   */
  TOURNAMENT_PLAYER_ID_CONSTRUCTION = 1062,

  /**
   * @generated from enum value: TOURNAMENT_EXECUTIVE_DIRECTOR_EXISTS = 1063;
   */
  TOURNAMENT_EXECUTIVE_DIRECTOR_EXISTS = 1063,

  /**
   * @generated from enum value: TOURNAMENT_DIRECTOR_EXISTS = 1064;
   */
  TOURNAMENT_DIRECTOR_EXISTS = 1064,

  /**
   * @generated from enum value: TOURNAMENT_NO_DIVISIONS = 1065;
   */
  TOURNAMENT_NO_DIVISIONS = 1065,

  /**
   * @generated from enum value: TOURNAMENT_GAME_CONTROLS_NOT_SET = 1066;
   */
  TOURNAMENT_GAME_CONTROLS_NOT_SET = 1066,

  /**
   * @generated from enum value: TOURNAMENT_INCORRECT_START_ROUND = 1067;
   */
  TOURNAMENT_INCORRECT_START_ROUND = 1067,

  /**
   * @generated from enum value: TOURNAMENT_PAIR_NON_FUTURE_ROUND = 1068;
   */
  TOURNAMENT_PAIR_NON_FUTURE_ROUND = 1068,

  /**
   * @generated from enum value: TOURNAMENT_DELETE_NON_FUTURE_ROUND = 1069;
   */
  TOURNAMENT_DELETE_NON_FUTURE_ROUND = 1069,

  /**
   * @generated from enum value: TOURNAMENT_DIVISION_NOT_FINISHED = 1070;
   */
  TOURNAMENT_DIVISION_NOT_FINISHED = 1070,

  /**
   * @generated from enum value: TOURNAMENT_NOT_EXACTLY_ONE_EXECUTIVE_DIRECTOR = 1071;
   */
  TOURNAMENT_NOT_EXACTLY_ONE_EXECUTIVE_DIRECTOR = 1071,

  /**
   * @generated from enum value: TOURNAMENT_EXECUTIVE_DIRECTOR_REMOVAL = 1072;
   */
  TOURNAMENT_EXECUTIVE_DIRECTOR_REMOVAL = 1072,

  /**
   * @generated from enum value: TOURNAMENT_INVALID_FUTURE_RESULT = 1073;
   */
  TOURNAMENT_INVALID_FUTURE_RESULT = 1073,

  /**
   * @generated from enum value: TOURNAMENT_SCHEDULED_START_AFTER_END = 1090;
   */
  TOURNAMENT_SCHEDULED_START_AFTER_END = 1090,

  /**
   * @generated from enum value: TOURNAMENT_NOT_FINISHED = 1091;
   */
  TOURNAMENT_NOT_FINISHED = 1091,

  /**
   * @generated from enum value: TOURNAMENT_OPENCHECKINS_AFTER_START = 1092;
   */
  TOURNAMENT_OPENCHECKINS_AFTER_START = 1092,

  /**
   * @generated from enum value: TOURNAMENT_CHECKINS_CLOSED = 1093;
   */
  TOURNAMENT_CHECKINS_CLOSED = 1093,

  /**
   * @generated from enum value: TOURNAMENT_NOT_REGISTERED = 1094;
   */
  TOURNAMENT_NOT_REGISTERED = 1094,

  /**
   * @generated from enum value: TOURNAMENT_REGISTRATIONS_CLOSED = 1095;
   */
  TOURNAMENT_REGISTRATIONS_CLOSED = 1095,

  /**
   * @generated from enum value: TOURNAMENT_ALREADY_STARTED = 1096;
   */
  TOURNAMENT_ALREADY_STARTED = 1096,

  /**
   * @generated from enum value: TOURNAMENT_OPENREGISTRATIONS_AFTER_START = 1097;
   */
  TOURNAMENT_OPENREGISTRATIONS_AFTER_START = 1097,

  /**
   * @generated from enum value: TOURNAMENT_CANNOT_START_CHECKINS_OR_REGISTRATIONS_OPEN = 1098;
   */
  TOURNAMENT_CANNOT_START_CHECKINS_OR_REGISTRATIONS_OPEN = 1098,

  /**
   * @generated from enum value: TOURNAMENT_CANNOT_REMOVE_UNCHECKED_IN_IF_CHECKINS_OPEN = 1099;
   */
  TOURNAMENT_CANNOT_REMOVE_UNCHECKED_IN_IF_CHECKINS_OPEN = 1099,

  /**
   * @generated from enum value: PUZZLE_VOTE_INVALID = 1074;
   */
  PUZZLE_VOTE_INVALID = 1074,

  /**
   * @generated from enum value: PUZZLE_GET_RANDOM_PUZZLE_ID_NOT_FOUND = 1075;
   */
  PUZZLE_GET_RANDOM_PUZZLE_ID_NOT_FOUND = 1075,

  /**
   * @generated from enum value: PUZZLE_GET_RANDOM_PUZZLE_NOT_FOUND = 1076;
   */
  PUZZLE_GET_RANDOM_PUZZLE_NOT_FOUND = 1076,

  /**
   * @generated from enum value: PUZZLE_GET_PUZZLE_UUID_NOT_FOUND = 1077;
   */
  PUZZLE_GET_PUZZLE_UUID_NOT_FOUND = 1077,

  /**
   * @generated from enum value: PUZZLE_GET_PREVIOUS_PUZZLE_NO_ATTEMPTS = 1078;
   */
  PUZZLE_GET_PREVIOUS_PUZZLE_NO_ATTEMPTS = 1078,

  /**
   * @generated from enum value: PUZZLE_GET_PREVIOUS_PUZZLE_ATTEMPT_NOT_FOUND = 1079;
   */
  PUZZLE_GET_PREVIOUS_PUZZLE_ATTEMPT_NOT_FOUND = 1079,

  /**
   * @generated from enum value: PUZZLE_GET_ANSWER_PUZZLE_UUID_NOT_FOUND = 1080;
   */
  PUZZLE_GET_ANSWER_PUZZLE_UUID_NOT_FOUND = 1080,

  /**
   * @generated from enum value: PUZZLE_SUBMIT_ANSWER_PUZZLE_ID_NOT_FOUND = 1081;
   */
  PUZZLE_SUBMIT_ANSWER_PUZZLE_ID_NOT_FOUND = 1081,

  /**
   * @generated from enum value: PUZZLE_SUBMIT_ANSWER_SET_CORRECT = 1082;
   */
  PUZZLE_SUBMIT_ANSWER_SET_CORRECT = 1082,

  /**
   * @generated from enum value: PUZZLE_SUBMIT_ANSWER_SET_ATTEMPTS = 1083;
   */
  PUZZLE_SUBMIT_ANSWER_SET_ATTEMPTS = 1083,

  /**
   * @generated from enum value: PUZZLE_SET_PUZZLE_VOTE_ID_NOT_FOUND = 1084;
   */
  PUZZLE_SET_PUZZLE_VOTE_ID_NOT_FOUND = 1084,

  /**
   * @generated from enum value: PUZZLE_SUBMIT_ANSWER_PUZZLE_ATTEMPT_NOT_FOUND = 1085;
   */
  PUZZLE_SUBMIT_ANSWER_PUZZLE_ATTEMPT_NOT_FOUND = 1085,

  /**
   * @generated from enum value: PUZZLE_GET_PUZZLE_UPDATE_ATTEMPT = 1086;
   */
  PUZZLE_GET_PUZZLE_UPDATE_ATTEMPT = 1086,

  /**
   * @generated from enum value: PUZZLE_GET_ANSWER_NOT_YET_RATED = 1087;
   */
  PUZZLE_GET_ANSWER_NOT_YET_RATED = 1087,

  /**
   * @generated from enum value: USER_UPDATE_NOT_FOUND = 1088;
   */
  USER_UPDATE_NOT_FOUND = 1088,

  /**
   * @generated from enum value: GAME_NO_LONGER_AVAILABLE = 1089;
   */
  GAME_NO_LONGER_AVAILABLE = 1089,
}

/**
 * Describes the enum ipc.WooglesError.
 */
export const WooglesErrorSchema: GenEnum<WooglesError> = /*@__PURE__*/
  enumDesc(file_proto_ipc_errors, 0);

