// Definitions for pairing messages

// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file proto/ipc/pair.proto (package ipc, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file proto/ipc/pair.proto.
 */
export const file_proto_ipc_pair: GenFile = /*@__PURE__*/
  fileDesc("ChRwcm90by9pcGMvcGFpci5wcm90bxIDaXBjIiEKDVJvdW5kUGFpcmluZ3MSEAoIcGFpcmluZ3MYASADKAUiHwoMUm91bmRSZXN1bHRzEg8KB3Jlc3VsdHMYASADKAUirQQKC1BhaXJSZXF1ZXN0EiQKC3BhaXJfbWV0aG9kGAEgASgOMg8uaXBjLlBhaXJNZXRob2QSFAoMcGxheWVyX25hbWVzGAIgAygJEhYKDnBsYXllcl9jbGFzc2VzGAMgAygFEi0KEWRpdmlzaW9uX3BhaXJpbmdzGAQgAygLMhIuaXBjLlJvdW5kUGFpcmluZ3MSKwoQZGl2aXNpb25fcmVzdWx0cxgFIAMoCzIRLmlwYy5Sb3VuZFJlc3VsdHMSFAoMY2xhc3NfcHJpemVzGAYgAygFEhUKDWdpYnNvbl9zcHJlYWQYByABKAUSHgoWY29udHJvbF9sb3NzX3RocmVzaG9sZBgIIAEoARIdChVob3BlZnVsbmVzc190aHJlc2hvbGQYCSABKAESEwoLYWxsX3BsYXllcnMYCiABKAUSFQoNdmFsaWRfcGxheWVycxgLIAEoBRIOCgZyb3VuZHMYDCABKAUSFAoMcGxhY2VfcHJpemVzGA0gASgFEhUKDWRpdmlzaW9uX3NpbXMYDiABKAUSGQoRY29udHJvbF9sb3NzX3NpbXMYDyABKAUSJQodY29udHJvbF9sb3NzX2FjdGl2YXRpb25fcm91bmQYECABKAUSGQoRYWxsb3dfcmVwZWF0X2J5ZXMYESABKAgSFwoPcmVtb3ZlZF9wbGF5ZXJzGBIgAygFEgwKBHNlZWQYEyABKAMSFQoNdG9wX2Rvd25fYnllcxgUIAEoCCKEAQoMUGFpclJlc3BvbnNlEiIKCmVycm9yX2NvZGUYASABKA4yDi5pcGMuUGFpckVycm9yEhUKDWVycm9yX21lc3NhZ2UYAiABKAkSCwoDbG9nGAMgASgJEhAKCHBhaXJpbmdzGAQgAygFEhoKEmdpYnNvbml6ZWRfcGxheWVycxgFIAMoCCoVCgpQYWlyTWV0aG9kEgcKA0NPUBAAKpEHCglQYWlyRXJyb3ISCwoHU1VDQ0VTUxAAEh0KGVBMQVlFUl9DT1VOVF9JTlNVRkZJQ0lFTlQQARIcChhST1VORF9DT1VOVF9JTlNVRkZJQ0lFTlQQAhIaChZQTEFZRVJfQ09VTlRfVE9PX0xBUkdFEAMSIgoeUExBWUVSX05BTUVfQ09VTlRfSU5TVUZGSUNJRU5UEAQSFQoRUExBWUVSX05BTUVfRU1QVFkQBRIdChlNT1JFX1BBSVJJTkdTX1RIQU5fUk9VTkRTEAYSFQoRQUxMX1JPVU5EU19QQUlSRUQQBxIgChxJTlZBTElEX1JPVU5EX1BBSVJJTkdTX0NPVU5UEAgSHgoaUExBWUVSX0lOREVYX09VVF9PRl9CT1VORFMQCRITCg9VTlBBSVJFRF9QTEFZRVIQChITCg9JTlZBTElEX1BBSVJJTkcQCxIcChhNT1JFX1JFU1VMVFNfVEhBTl9ST1VORFMQDBIeChpNT1JFX1JFU1VMVFNfVEhBTl9QQUlSSU5HUxANEh8KG0lOVkFMSURfUk9VTkRfUkVTVUxUU19DT1VOVBAOEh4KGklOVkFMSURfUExBWUVSX0NMQVNTX0NPVU5UEA8SGAoUSU5WQUxJRF9QTEFZRVJfQ0xBU1MQEBIXChNJTlZBTElEX0NMQVNTX1BSSVpFEBESGQoVSU5WQUxJRF9HSUJTT05fU1BSRUFEEBISIgoeSU5WQUxJRF9DT05UUk9MX0xPU1NfVEhSRVNIT0xEEBMSIQodSU5WQUxJRF9IT1BFRlVMTkVTU19USFJFU0hPTEQQFBIZChVJTlZBTElEX0RJVklTSU9OX1NJTVMQFRIdChlJTlZBTElEX0NPTlRST0xfTE9TU19TSU1TEBYSKQolSU5WQUxJRF9DT05UUk9MX0xPU1NfQUNUSVZBVElPTl9ST1VORBAXEhgKFElOVkFMSURfUExBQ0VfUFJJWkVTEBgSGgoWSU5WQUxJRF9SRU1PVkVEX1BMQVlFUhAZEh4KGklOVkFMSURfVkFMSURfUExBWUVSX0NPVU5UEBoSFwoTTUlOX1dFSUdIVF9NQVRDSElORxAbEhsKF0lOVkFMSURfUEFJUklOR1NfTEVOR1RIEBwSEwoPT1ZFUkNPTlNUUkFJTkVEEB0SGgoWUkVRVUVTVF9UT19KU09OX0ZBSUxFRBAeEgsKB1RJTUVPVVQQH0JxCgdjb20uaXBjQglQYWlyUHJvdG9QAVovZ2l0aHViLmNvbS93b29nbGVzLWlvL2xpd29yZHMvcnBjL2FwaS9wcm90by9pcGOiAgNJWFiqAgNJcGPKAgNJcGPiAg9JcGNcR1BCTWV0YWRhdGHqAgNJcGNiBnByb3RvMw");

/**
 * @generated from message ipc.RoundPairings
 */
export type RoundPairings = Message<"ipc.RoundPairings"> & {
  /**
   * @generated from field: repeated int32 pairings = 1;
   */
  pairings: number[];
};

/**
 * Describes the message ipc.RoundPairings.
 * Use `create(RoundPairingsSchema)` to create a new message.
 */
export const RoundPairingsSchema: GenMessage<RoundPairings> = /*@__PURE__*/
  messageDesc(file_proto_ipc_pair, 0);

/**
 * @generated from message ipc.RoundResults
 */
export type RoundResults = Message<"ipc.RoundResults"> & {
  /**
   * @generated from field: repeated int32 results = 1;
   */
  results: number[];
};

/**
 * Describes the message ipc.RoundResults.
 * Use `create(RoundResultsSchema)` to create a new message.
 */
export const RoundResultsSchema: GenMessage<RoundResults> = /*@__PURE__*/
  messageDesc(file_proto_ipc_pair, 1);

/**
 * @generated from message ipc.PairRequest
 */
export type PairRequest = Message<"ipc.PairRequest"> & {
  /**
   * @generated from field: ipc.PairMethod pair_method = 1;
   */
  pairMethod: PairMethod;

  /**
   * @generated from field: repeated string player_names = 2;
   */
  playerNames: string[];

  /**
   * @generated from field: repeated int32 player_classes = 3;
   */
  playerClasses: number[];

  /**
   * @generated from field: repeated ipc.RoundPairings division_pairings = 4;
   */
  divisionPairings: RoundPairings[];

  /**
   * @generated from field: repeated ipc.RoundResults division_results = 5;
   */
  divisionResults: RoundResults[];

  /**
   * @generated from field: repeated int32 class_prizes = 6;
   */
  classPrizes: number[];

  /**
   * @generated from field: int32 gibson_spread = 7;
   */
  gibsonSpread: number;

  /**
   * @generated from field: double control_loss_threshold = 8;
   */
  controlLossThreshold: number;

  /**
   * @generated from field: double hopefulness_threshold = 9;
   */
  hopefulnessThreshold: number;

  /**
   * @generated from field: int32 all_players = 10;
   */
  allPlayers: number;

  /**
   * @generated from field: int32 valid_players = 11;
   */
  validPlayers: number;

  /**
   * @generated from field: int32 rounds = 12;
   */
  rounds: number;

  /**
   * @generated from field: int32 place_prizes = 13;
   */
  placePrizes: number;

  /**
   * @generated from field: int32 division_sims = 14;
   */
  divisionSims: number;

  /**
   * @generated from field: int32 control_loss_sims = 15;
   */
  controlLossSims: number;

  /**
   * @generated from field: int32 control_loss_activation_round = 16;
   */
  controlLossActivationRound: number;

  /**
   * @generated from field: bool allow_repeat_byes = 17;
   */
  allowRepeatByes: boolean;

  /**
   * @generated from field: repeated int32 removed_players = 18;
   */
  removedPlayers: number[];

  /**
   * @generated from field: int64 seed = 19;
   */
  seed: bigint;

  /**
   * @generated from field: bool top_down_byes = 20;
   */
  topDownByes: boolean;
};

/**
 * Describes the message ipc.PairRequest.
 * Use `create(PairRequestSchema)` to create a new message.
 */
export const PairRequestSchema: GenMessage<PairRequest> = /*@__PURE__*/
  messageDesc(file_proto_ipc_pair, 2);

/**
 * @generated from message ipc.PairResponse
 */
export type PairResponse = Message<"ipc.PairResponse"> & {
  /**
   * @generated from field: ipc.PairError error_code = 1;
   */
  errorCode: PairError;

  /**
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;

  /**
   * @generated from field: string log = 3;
   */
  log: string;

  /**
   * @generated from field: repeated int32 pairings = 4;
   */
  pairings: number[];

  /**
   * @generated from field: repeated bool gibsonized_players = 5;
   */
  gibsonizedPlayers: boolean[];
};

/**
 * Describes the message ipc.PairResponse.
 * Use `create(PairResponseSchema)` to create a new message.
 */
export const PairResponseSchema: GenMessage<PairResponse> = /*@__PURE__*/
  messageDesc(file_proto_ipc_pair, 3);

/**
 * @generated from enum ipc.PairMethod
 */
export enum PairMethod {
  /**
   * @generated from enum value: COP = 0;
   */
  COP = 0,
}

/**
 * Describes the enum ipc.PairMethod.
 */
export const PairMethodSchema: GenEnum<PairMethod> = /*@__PURE__*/
  enumDesc(file_proto_ipc_pair, 0);

/**
 * @generated from enum ipc.PairError
 */
export enum PairError {
  /**
   * @generated from enum value: SUCCESS = 0;
   */
  SUCCESS = 0,

  /**
   * @generated from enum value: PLAYER_COUNT_INSUFFICIENT = 1;
   */
  PLAYER_COUNT_INSUFFICIENT = 1,

  /**
   * @generated from enum value: ROUND_COUNT_INSUFFICIENT = 2;
   */
  ROUND_COUNT_INSUFFICIENT = 2,

  /**
   * @generated from enum value: PLAYER_COUNT_TOO_LARGE = 3;
   */
  PLAYER_COUNT_TOO_LARGE = 3,

  /**
   * @generated from enum value: PLAYER_NAME_COUNT_INSUFFICIENT = 4;
   */
  PLAYER_NAME_COUNT_INSUFFICIENT = 4,

  /**
   * @generated from enum value: PLAYER_NAME_EMPTY = 5;
   */
  PLAYER_NAME_EMPTY = 5,

  /**
   * @generated from enum value: MORE_PAIRINGS_THAN_ROUNDS = 6;
   */
  MORE_PAIRINGS_THAN_ROUNDS = 6,

  /**
   * @generated from enum value: ALL_ROUNDS_PAIRED = 7;
   */
  ALL_ROUNDS_PAIRED = 7,

  /**
   * @generated from enum value: INVALID_ROUND_PAIRINGS_COUNT = 8;
   */
  INVALID_ROUND_PAIRINGS_COUNT = 8,

  /**
   * @generated from enum value: PLAYER_INDEX_OUT_OF_BOUNDS = 9;
   */
  PLAYER_INDEX_OUT_OF_BOUNDS = 9,

  /**
   * @generated from enum value: UNPAIRED_PLAYER = 10;
   */
  UNPAIRED_PLAYER = 10,

  /**
   * @generated from enum value: INVALID_PAIRING = 11;
   */
  INVALID_PAIRING = 11,

  /**
   * @generated from enum value: MORE_RESULTS_THAN_ROUNDS = 12;
   */
  MORE_RESULTS_THAN_ROUNDS = 12,

  /**
   * @generated from enum value: MORE_RESULTS_THAN_PAIRINGS = 13;
   */
  MORE_RESULTS_THAN_PAIRINGS = 13,

  /**
   * @generated from enum value: INVALID_ROUND_RESULTS_COUNT = 14;
   */
  INVALID_ROUND_RESULTS_COUNT = 14,

  /**
   * @generated from enum value: INVALID_PLAYER_CLASS_COUNT = 15;
   */
  INVALID_PLAYER_CLASS_COUNT = 15,

  /**
   * @generated from enum value: INVALID_PLAYER_CLASS = 16;
   */
  INVALID_PLAYER_CLASS = 16,

  /**
   * @generated from enum value: INVALID_CLASS_PRIZE = 17;
   */
  INVALID_CLASS_PRIZE = 17,

  /**
   * @generated from enum value: INVALID_GIBSON_SPREAD = 18;
   */
  INVALID_GIBSON_SPREAD = 18,

  /**
   * @generated from enum value: INVALID_CONTROL_LOSS_THRESHOLD = 19;
   */
  INVALID_CONTROL_LOSS_THRESHOLD = 19,

  /**
   * @generated from enum value: INVALID_HOPEFULNESS_THRESHOLD = 20;
   */
  INVALID_HOPEFULNESS_THRESHOLD = 20,

  /**
   * @generated from enum value: INVALID_DIVISION_SIMS = 21;
   */
  INVALID_DIVISION_SIMS = 21,

  /**
   * @generated from enum value: INVALID_CONTROL_LOSS_SIMS = 22;
   */
  INVALID_CONTROL_LOSS_SIMS = 22,

  /**
   * @generated from enum value: INVALID_CONTROL_LOSS_ACTIVATION_ROUND = 23;
   */
  INVALID_CONTROL_LOSS_ACTIVATION_ROUND = 23,

  /**
   * @generated from enum value: INVALID_PLACE_PRIZES = 24;
   */
  INVALID_PLACE_PRIZES = 24,

  /**
   * @generated from enum value: INVALID_REMOVED_PLAYER = 25;
   */
  INVALID_REMOVED_PLAYER = 25,

  /**
   * @generated from enum value: INVALID_VALID_PLAYER_COUNT = 26;
   */
  INVALID_VALID_PLAYER_COUNT = 26,

  /**
   * @generated from enum value: MIN_WEIGHT_MATCHING = 27;
   */
  MIN_WEIGHT_MATCHING = 27,

  /**
   * @generated from enum value: INVALID_PAIRINGS_LENGTH = 28;
   */
  INVALID_PAIRINGS_LENGTH = 28,

  /**
   * @generated from enum value: OVERCONSTRAINED = 29;
   */
  OVERCONSTRAINED = 29,

  /**
   * @generated from enum value: REQUEST_TO_JSON_FAILED = 30;
   */
  REQUEST_TO_JSON_FAILED = 30,

  /**
   * @generated from enum value: TIMEOUT = 31;
   */
  TIMEOUT = 31,
}

/**
 * Describes the enum ipc.PairError.
 */
export const PairErrorSchema: GenEnum<PairError> = /*@__PURE__*/
  enumDesc(file_proto_ipc_pair, 1);

