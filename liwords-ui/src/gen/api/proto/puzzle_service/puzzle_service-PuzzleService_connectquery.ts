// @generated by protoc-gen-connect-query v2.1.1 with parameter "target=ts"
// @generated from file proto/puzzle_service/puzzle_service.proto (package puzzle_service, syntax proto3)
/* eslint-disable */

import { PuzzleService } from "./puzzle_service_pb";

/**
 * @generated from rpc puzzle_service.PuzzleService.GetStartPuzzleId
 */
export const getStartPuzzleId = PuzzleService.method.getStartPuzzleId;

/**
 * @generated from rpc puzzle_service.PuzzleService.GetNextPuzzleId
 */
export const getNextPuzzleId = PuzzleService.method.getNextPuzzleId;

/**
 * @generated from rpc puzzle_service.PuzzleService.GetNextClosestRatingPuzzleId
 */
export const getNextClosestRatingPuzzleId = PuzzleService.method.getNextClosestRatingPuzzleId;

/**
 * @generated from rpc puzzle_service.PuzzleService.GetPuzzle
 */
export const getPuzzle = PuzzleService.method.getPuzzle;

/**
 * @generated from rpc puzzle_service.PuzzleService.SubmitAnswer
 */
export const submitAnswer = PuzzleService.method.submitAnswer;

/**
 * GetPuzzleAnswer just gets the answer of the puzzle without a submission.
 * It will not work if the user has not tried the puzzle at least once.
 *
 * @generated from rpc puzzle_service.PuzzleService.GetPuzzleAnswer
 */
export const getPuzzleAnswer = PuzzleService.method.getPuzzleAnswer;

/**
 * @generated from rpc puzzle_service.PuzzleService.GetPreviousPuzzleId
 */
export const getPreviousPuzzleId = PuzzleService.method.getPreviousPuzzleId;

/**
 * @generated from rpc puzzle_service.PuzzleService.SetPuzzleVote
 */
export const setPuzzleVote = PuzzleService.method.setPuzzleVote;

/**
 * @generated from rpc puzzle_service.PuzzleService.StartPuzzleGenJob
 */
export const startPuzzleGenJob = PuzzleService.method.startPuzzleGenJob;

/**
 * @generated from rpc puzzle_service.PuzzleService.GetPuzzleJobLogs
 */
export const getPuzzleJobLogs = PuzzleService.method.getPuzzleJobLogs;
