// Definitions for OMGWord seek functionality.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/ipc/omgseeks.proto

package ipc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SeekState int32

const (
	SeekState_ABSENT  SeekState = 0
	SeekState_PRESENT SeekState = 1
	SeekState_READY   SeekState = 2
)

// Enum value maps for SeekState.
var (
	SeekState_name = map[int32]string{
		0: "ABSENT",
		1: "PRESENT",
		2: "READY",
	}
	SeekState_value = map[string]int32{
		"ABSENT":  0,
		"PRESENT": 1,
		"READY":   2,
	}
)

func (x SeekState) Enum() *SeekState {
	p := new(SeekState)
	*p = x
	return p
}

func (x SeekState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SeekState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ipc_omgseeks_proto_enumTypes[0].Descriptor()
}

func (SeekState) Type() protoreflect.EnumType {
	return &file_proto_ipc_omgseeks_proto_enumTypes[0]
}

func (x SeekState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SeekState.Descriptor instead.
func (SeekState) EnumDescriptor() ([]byte, []int) {
	return file_proto_ipc_omgseeks_proto_rawDescGZIP(), []int{0}
}

// A MatchUser requests or receives a match via a seek or a match request.
type MatchUser struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// user_id is the database, or anonymous, ID of the user.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// relevant_rating is the rating of the user, for the relevant seek mode.
	RelevantRating string `protobuf:"bytes,2,opt,name=relevant_rating,json=relevantRating,proto3" json:"relevant_rating,omitempty"`
	// if is_anonymous, backend won't bother to look up the user in the DB.
	IsAnonymous bool `protobuf:"varint,3,opt,name=is_anonymous,json=isAnonymous,proto3" json:"is_anonymous,omitempty"`
	// display_name is the display username of the user (could be real name too)
	DisplayName   string `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchUser) Reset() {
	*x = MatchUser{}
	mi := &file_proto_ipc_omgseeks_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchUser) ProtoMessage() {}

func (x *MatchUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ipc_omgseeks_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchUser.ProtoReflect.Descriptor instead.
func (*MatchUser) Descriptor() ([]byte, []int) {
	return file_proto_ipc_omgseeks_proto_rawDescGZIP(), []int{0}
}

func (x *MatchUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MatchUser) GetRelevantRating() string {
	if x != nil {
		return x.RelevantRating
	}
	return ""
}

func (x *MatchUser) GetIsAnonymous() bool {
	if x != nil {
		return x.IsAnonymous
	}
	return false
}

func (x *MatchUser) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type SeekRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	GameRequest        *GameRequest           `protobuf:"bytes,1,opt,name=game_request,json=gameRequest,proto3" json:"game_request,omitempty"`
	User               *MatchUser             `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	MinimumRatingRange int32                  `protobuf:"varint,3,opt,name=minimum_rating_range,json=minimumRatingRange,proto3" json:"minimum_rating_range,omitempty"`
	MaximumRatingRange int32                  `protobuf:"varint,4,opt,name=maximum_rating_range,json=maximumRatingRange,proto3" json:"maximum_rating_range,omitempty"`
	// connection_id is the websocket ID via which this game was requested.
	SeekerConnectionId   string     `protobuf:"bytes,5,opt,name=seeker_connection_id,json=seekerConnectionId,proto3" json:"seeker_connection_id,omitempty"`
	ReceivingUser        *MatchUser `protobuf:"bytes,6,opt,name=receiving_user,json=receivingUser,proto3" json:"receiving_user,omitempty"`
	UserState            SeekState  `protobuf:"varint,7,opt,name=user_state,json=userState,proto3,enum=ipc.SeekState" json:"user_state,omitempty"`
	ReceiverState        SeekState  `protobuf:"varint,8,opt,name=receiver_state,json=receiverState,proto3,enum=ipc.SeekState" json:"receiver_state,omitempty"`
	ReceiverConnectionId string     `protobuf:"bytes,9,opt,name=receiver_connection_id,json=receiverConnectionId,proto3" json:"receiver_connection_id,omitempty"`
	BootedReceivers      []string   `protobuf:"bytes,10,rep,name=booted_receivers,json=bootedReceivers,proto3" json:"booted_receivers,omitempty"`
	// rematch_for is the game ID that this Match Request is a rematch for (empty
	// if it isn't a rematch)
	RematchFor string `protobuf:"bytes,11,opt,name=rematch_for,json=rematchFor,proto3" json:"rematch_for,omitempty"`
	// If this match request is part of a tournament, it is treated in a special
	// way. We are moving towards server-only matching during tournaments,
	// so the following will only be used in "clubhouse mode" / more free-form
	// clubs.
	TournamentId        string `protobuf:"bytes,12,opt,name=tournament_id,json=tournamentId,proto3" json:"tournament_id,omitempty"`
	ReceiverIsPermanent bool   `protobuf:"varint,13,opt,name=receiver_is_permanent,json=receiverIsPermanent,proto3" json:"receiver_is_permanent,omitempty"`
	RatingKey           string `protobuf:"bytes,14,opt,name=rating_key,json=ratingKey,proto3" json:"rating_key,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SeekRequest) Reset() {
	*x = SeekRequest{}
	mi := &file_proto_ipc_omgseeks_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeekRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekRequest) ProtoMessage() {}

func (x *SeekRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ipc_omgseeks_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekRequest.ProtoReflect.Descriptor instead.
func (*SeekRequest) Descriptor() ([]byte, []int) {
	return file_proto_ipc_omgseeks_proto_rawDescGZIP(), []int{1}
}

func (x *SeekRequest) GetGameRequest() *GameRequest {
	if x != nil {
		return x.GameRequest
	}
	return nil
}

func (x *SeekRequest) GetUser() *MatchUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *SeekRequest) GetMinimumRatingRange() int32 {
	if x != nil {
		return x.MinimumRatingRange
	}
	return 0
}

func (x *SeekRequest) GetMaximumRatingRange() int32 {
	if x != nil {
		return x.MaximumRatingRange
	}
	return 0
}

func (x *SeekRequest) GetSeekerConnectionId() string {
	if x != nil {
		return x.SeekerConnectionId
	}
	return ""
}

func (x *SeekRequest) GetReceivingUser() *MatchUser {
	if x != nil {
		return x.ReceivingUser
	}
	return nil
}

func (x *SeekRequest) GetUserState() SeekState {
	if x != nil {
		return x.UserState
	}
	return SeekState_ABSENT
}

func (x *SeekRequest) GetReceiverState() SeekState {
	if x != nil {
		return x.ReceiverState
	}
	return SeekState_ABSENT
}

func (x *SeekRequest) GetReceiverConnectionId() string {
	if x != nil {
		return x.ReceiverConnectionId
	}
	return ""
}

func (x *SeekRequest) GetBootedReceivers() []string {
	if x != nil {
		return x.BootedReceivers
	}
	return nil
}

func (x *SeekRequest) GetRematchFor() string {
	if x != nil {
		return x.RematchFor
	}
	return ""
}

func (x *SeekRequest) GetTournamentId() string {
	if x != nil {
		return x.TournamentId
	}
	return ""
}

func (x *SeekRequest) GetReceiverIsPermanent() bool {
	if x != nil {
		return x.ReceiverIsPermanent
	}
	return false
}

func (x *SeekRequest) GetRatingKey() string {
	if x != nil {
		return x.RatingKey
	}
	return ""
}

// A SoughtGameProcessEvent gets sent when a match request (or seek request)
// get accepted (from client to server), or cancelled -- when sent from server
// to client.
type SoughtGameProcessEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SoughtGameProcessEvent) Reset() {
	*x = SoughtGameProcessEvent{}
	mi := &file_proto_ipc_omgseeks_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoughtGameProcessEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoughtGameProcessEvent) ProtoMessage() {}

func (x *SoughtGameProcessEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ipc_omgseeks_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoughtGameProcessEvent.ProtoReflect.Descriptor instead.
func (*SoughtGameProcessEvent) Descriptor() ([]byte, []int) {
	return file_proto_ipc_omgseeks_proto_rawDescGZIP(), []int{2}
}

func (x *SoughtGameProcessEvent) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// SeekRequests sends all open seek requests.
type SeekRequests struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Requests      []*SeekRequest         `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeekRequests) Reset() {
	*x = SeekRequests{}
	mi := &file_proto_ipc_omgseeks_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeekRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeekRequests) ProtoMessage() {}

func (x *SeekRequests) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ipc_omgseeks_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeekRequests.ProtoReflect.Descriptor instead.
func (*SeekRequests) Descriptor() ([]byte, []int) {
	return file_proto_ipc_omgseeks_proto_rawDescGZIP(), []int{3}
}

func (x *SeekRequests) GetRequests() []*SeekRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

// When a Receiver declines a Seeker:
type DeclineSeekRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeclineSeekRequest) Reset() {
	*x = DeclineSeekRequest{}
	mi := &file_proto_ipc_omgseeks_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeclineSeekRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeclineSeekRequest) ProtoMessage() {}

func (x *DeclineSeekRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ipc_omgseeks_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeclineSeekRequest.ProtoReflect.Descriptor instead.
func (*DeclineSeekRequest) Descriptor() ([]byte, []int) {
	return file_proto_ipc_omgseeks_proto_rawDescGZIP(), []int{4}
}

func (x *DeclineSeekRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

var File_proto_ipc_omgseeks_proto protoreflect.FileDescriptor

const file_proto_ipc_omgseeks_proto_rawDesc = "" +
	"\n" +
	"\x18proto/ipc/omgseeks.proto\x12\x03ipc\x1a\x18proto/ipc/omgwords.proto\"\x93\x01\n" +
	"\tMatchUser\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0frelevant_rating\x18\x02 \x01(\tR\x0erelevantRating\x12!\n" +
	"\fis_anonymous\x18\x03 \x01(\bR\visAnonymous\x12!\n" +
	"\fdisplay_name\x18\x04 \x01(\tR\vdisplayName\"\x93\x05\n" +
	"\vSeekRequest\x123\n" +
	"\fgame_request\x18\x01 \x01(\v2\x10.ipc.GameRequestR\vgameRequest\x12\"\n" +
	"\x04user\x18\x02 \x01(\v2\x0e.ipc.MatchUserR\x04user\x120\n" +
	"\x14minimum_rating_range\x18\x03 \x01(\x05R\x12minimumRatingRange\x120\n" +
	"\x14maximum_rating_range\x18\x04 \x01(\x05R\x12maximumRatingRange\x120\n" +
	"\x14seeker_connection_id\x18\x05 \x01(\tR\x12seekerConnectionId\x125\n" +
	"\x0ereceiving_user\x18\x06 \x01(\v2\x0e.ipc.MatchUserR\rreceivingUser\x12-\n" +
	"\n" +
	"user_state\x18\a \x01(\x0e2\x0e.ipc.SeekStateR\tuserState\x125\n" +
	"\x0ereceiver_state\x18\b \x01(\x0e2\x0e.ipc.SeekStateR\rreceiverState\x124\n" +
	"\x16receiver_connection_id\x18\t \x01(\tR\x14receiverConnectionId\x12)\n" +
	"\x10booted_receivers\x18\n" +
	" \x03(\tR\x0fbootedReceivers\x12\x1f\n" +
	"\vrematch_for\x18\v \x01(\tR\n" +
	"rematchFor\x12#\n" +
	"\rtournament_id\x18\f \x01(\tR\ftournamentId\x122\n" +
	"\x15receiver_is_permanent\x18\r \x01(\bR\x13receiverIsPermanent\x12\x1d\n" +
	"\n" +
	"rating_key\x18\x0e \x01(\tR\tratingKey\"7\n" +
	"\x16SoughtGameProcessEvent\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\"<\n" +
	"\fSeekRequests\x12,\n" +
	"\brequests\x18\x01 \x03(\v2\x10.ipc.SeekRequestR\brequests\"3\n" +
	"\x12DeclineSeekRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId*/\n" +
	"\tSeekState\x12\n" +
	"\n" +
	"\x06ABSENT\x10\x00\x12\v\n" +
	"\aPRESENT\x10\x01\x12\t\n" +
	"\x05READY\x10\x02Bu\n" +
	"\acom.ipcB\rOmgseeksProtoP\x01Z/github.com/woogles-io/liwords/rpc/api/proto/ipc\xa2\x02\x03IXX\xaa\x02\x03Ipc\xca\x02\x03Ipc\xe2\x02\x0fIpc\\GPBMetadata\xea\x02\x03Ipcb\x06proto3"

var (
	file_proto_ipc_omgseeks_proto_rawDescOnce sync.Once
	file_proto_ipc_omgseeks_proto_rawDescData []byte
)

func file_proto_ipc_omgseeks_proto_rawDescGZIP() []byte {
	file_proto_ipc_omgseeks_proto_rawDescOnce.Do(func() {
		file_proto_ipc_omgseeks_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_ipc_omgseeks_proto_rawDesc), len(file_proto_ipc_omgseeks_proto_rawDesc)))
	})
	return file_proto_ipc_omgseeks_proto_rawDescData
}

var file_proto_ipc_omgseeks_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_ipc_omgseeks_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_ipc_omgseeks_proto_goTypes = []any{
	(SeekState)(0),                 // 0: ipc.SeekState
	(*MatchUser)(nil),              // 1: ipc.MatchUser
	(*SeekRequest)(nil),            // 2: ipc.SeekRequest
	(*SoughtGameProcessEvent)(nil), // 3: ipc.SoughtGameProcessEvent
	(*SeekRequests)(nil),           // 4: ipc.SeekRequests
	(*DeclineSeekRequest)(nil),     // 5: ipc.DeclineSeekRequest
	(*GameRequest)(nil),            // 6: ipc.GameRequest
}
var file_proto_ipc_omgseeks_proto_depIdxs = []int32{
	6, // 0: ipc.SeekRequest.game_request:type_name -> ipc.GameRequest
	1, // 1: ipc.SeekRequest.user:type_name -> ipc.MatchUser
	1, // 2: ipc.SeekRequest.receiving_user:type_name -> ipc.MatchUser
	0, // 3: ipc.SeekRequest.user_state:type_name -> ipc.SeekState
	0, // 4: ipc.SeekRequest.receiver_state:type_name -> ipc.SeekState
	2, // 5: ipc.SeekRequests.requests:type_name -> ipc.SeekRequest
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_ipc_omgseeks_proto_init() }
func file_proto_ipc_omgseeks_proto_init() {
	if File_proto_ipc_omgseeks_proto != nil {
		return
	}
	file_proto_ipc_omgwords_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_ipc_omgseeks_proto_rawDesc), len(file_proto_ipc_omgseeks_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_ipc_omgseeks_proto_goTypes,
		DependencyIndexes: file_proto_ipc_omgseeks_proto_depIdxs,
		EnumInfos:         file_proto_ipc_omgseeks_proto_enumTypes,
		MessageInfos:      file_proto_ipc_omgseeks_proto_msgTypes,
	}.Build()
	File_proto_ipc_omgseeks_proto = out.File
	file_proto_ipc_omgseeks_proto_goTypes = nil
	file_proto_ipc_omgseeks_proto_depIdxs = nil
}
