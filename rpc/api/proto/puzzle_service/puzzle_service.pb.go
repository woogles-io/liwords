// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: proto/puzzle_service/puzzle_service.proto

package puzzle_service

import (
	macondo "github.com/domino14/macondo/gen/api/proto/macondo"
	ipc "github.com/woogles-io/liwords/rpc/api/proto/ipc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PuzzleQueryResult int32

const (
	PuzzleQueryResult_UNSEEN     PuzzleQueryResult = 0
	PuzzleQueryResult_UNRATED    PuzzleQueryResult = 1
	PuzzleQueryResult_UNFINISHED PuzzleQueryResult = 2
	PuzzleQueryResult_EXHAUSTED  PuzzleQueryResult = 3
	PuzzleQueryResult_RANDOM     PuzzleQueryResult = 4
	PuzzleQueryResult_START      PuzzleQueryResult = 5
)

// Enum value maps for PuzzleQueryResult.
var (
	PuzzleQueryResult_name = map[int32]string{
		0: "UNSEEN",
		1: "UNRATED",
		2: "UNFINISHED",
		3: "EXHAUSTED",
		4: "RANDOM",
		5: "START",
	}
	PuzzleQueryResult_value = map[string]int32{
		"UNSEEN":     0,
		"UNRATED":    1,
		"UNFINISHED": 2,
		"EXHAUSTED":  3,
		"RANDOM":     4,
		"START":      5,
	}
)

func (x PuzzleQueryResult) Enum() *PuzzleQueryResult {
	p := new(PuzzleQueryResult)
	*p = x
	return p
}

func (x PuzzleQueryResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PuzzleQueryResult) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_puzzle_service_puzzle_service_proto_enumTypes[0].Descriptor()
}

func (PuzzleQueryResult) Type() protoreflect.EnumType {
	return &file_proto_puzzle_service_puzzle_service_proto_enumTypes[0]
}

func (x PuzzleQueryResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PuzzleQueryResult.Descriptor instead.
func (PuzzleQueryResult) EnumDescriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{0}
}

type PuzzleStatus int32

const (
	PuzzleStatus_UNANSWERED PuzzleStatus = 0
	PuzzleStatus_CORRECT    PuzzleStatus = 1
	PuzzleStatus_INCORRECT  PuzzleStatus = 2
)

// Enum value maps for PuzzleStatus.
var (
	PuzzleStatus_name = map[int32]string{
		0: "UNANSWERED",
		1: "CORRECT",
		2: "INCORRECT",
	}
	PuzzleStatus_value = map[string]int32{
		"UNANSWERED": 0,
		"CORRECT":    1,
		"INCORRECT":  2,
	}
)

func (x PuzzleStatus) Enum() *PuzzleStatus {
	p := new(PuzzleStatus)
	*p = x
	return p
}

func (x PuzzleStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PuzzleStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_puzzle_service_puzzle_service_proto_enumTypes[1].Descriptor()
}

func (PuzzleStatus) Type() protoreflect.EnumType {
	return &file_proto_puzzle_service_puzzle_service_proto_enumTypes[1]
}

func (x PuzzleStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PuzzleStatus.Descriptor instead.
func (PuzzleStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{1}
}

type StartPuzzleIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lexicon       string                 `protobuf:"bytes,1,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartPuzzleIdRequest) Reset() {
	*x = StartPuzzleIdRequest{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartPuzzleIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPuzzleIdRequest) ProtoMessage() {}

func (x *StartPuzzleIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPuzzleIdRequest.ProtoReflect.Descriptor instead.
func (*StartPuzzleIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{0}
}

func (x *StartPuzzleIdRequest) GetLexicon() string {
	if x != nil {
		return x.Lexicon
	}
	return ""
}

type StartPuzzleIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PuzzleId      string                 `protobuf:"bytes,1,opt,name=puzzle_id,json=puzzleId,proto3" json:"puzzle_id,omitempty"`
	QueryResult   PuzzleQueryResult      `protobuf:"varint,2,opt,name=query_result,json=queryResult,proto3,enum=puzzle_service.PuzzleQueryResult" json:"query_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartPuzzleIdResponse) Reset() {
	*x = StartPuzzleIdResponse{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartPuzzleIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPuzzleIdResponse) ProtoMessage() {}

func (x *StartPuzzleIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPuzzleIdResponse.ProtoReflect.Descriptor instead.
func (*StartPuzzleIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{1}
}

func (x *StartPuzzleIdResponse) GetPuzzleId() string {
	if x != nil {
		return x.PuzzleId
	}
	return ""
}

func (x *StartPuzzleIdResponse) GetQueryResult() PuzzleQueryResult {
	if x != nil {
		return x.QueryResult
	}
	return PuzzleQueryResult_UNSEEN
}

type NextPuzzleIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lexicon       string                 `protobuf:"bytes,1,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NextPuzzleIdRequest) Reset() {
	*x = NextPuzzleIdRequest{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextPuzzleIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextPuzzleIdRequest) ProtoMessage() {}

func (x *NextPuzzleIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextPuzzleIdRequest.ProtoReflect.Descriptor instead.
func (*NextPuzzleIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{2}
}

func (x *NextPuzzleIdRequest) GetLexicon() string {
	if x != nil {
		return x.Lexicon
	}
	return ""
}

type NextPuzzleIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PuzzleId      string                 `protobuf:"bytes,1,opt,name=puzzle_id,json=puzzleId,proto3" json:"puzzle_id,omitempty"`
	QueryResult   PuzzleQueryResult      `protobuf:"varint,2,opt,name=query_result,json=queryResult,proto3,enum=puzzle_service.PuzzleQueryResult" json:"query_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NextPuzzleIdResponse) Reset() {
	*x = NextPuzzleIdResponse{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextPuzzleIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextPuzzleIdResponse) ProtoMessage() {}

func (x *NextPuzzleIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextPuzzleIdResponse.ProtoReflect.Descriptor instead.
func (*NextPuzzleIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{3}
}

func (x *NextPuzzleIdResponse) GetPuzzleId() string {
	if x != nil {
		return x.PuzzleId
	}
	return ""
}

func (x *NextPuzzleIdResponse) GetQueryResult() PuzzleQueryResult {
	if x != nil {
		return x.QueryResult
	}
	return PuzzleQueryResult_UNSEEN
}

type NextClosestRatingPuzzleIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lexicon       string                 `protobuf:"bytes,1,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NextClosestRatingPuzzleIdRequest) Reset() {
	*x = NextClosestRatingPuzzleIdRequest{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextClosestRatingPuzzleIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextClosestRatingPuzzleIdRequest) ProtoMessage() {}

func (x *NextClosestRatingPuzzleIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextClosestRatingPuzzleIdRequest.ProtoReflect.Descriptor instead.
func (*NextClosestRatingPuzzleIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{4}
}

func (x *NextClosestRatingPuzzleIdRequest) GetLexicon() string {
	if x != nil {
		return x.Lexicon
	}
	return ""
}

type NextClosestRatingPuzzleIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PuzzleId      string                 `protobuf:"bytes,1,opt,name=puzzle_id,json=puzzleId,proto3" json:"puzzle_id,omitempty"`
	QueryResult   PuzzleQueryResult      `protobuf:"varint,2,opt,name=query_result,json=queryResult,proto3,enum=puzzle_service.PuzzleQueryResult" json:"query_result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NextClosestRatingPuzzleIdResponse) Reset() {
	*x = NextClosestRatingPuzzleIdResponse{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NextClosestRatingPuzzleIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextClosestRatingPuzzleIdResponse) ProtoMessage() {}

func (x *NextClosestRatingPuzzleIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextClosestRatingPuzzleIdResponse.ProtoReflect.Descriptor instead.
func (*NextClosestRatingPuzzleIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{5}
}

func (x *NextClosestRatingPuzzleIdResponse) GetPuzzleId() string {
	if x != nil {
		return x.PuzzleId
	}
	return ""
}

func (x *NextClosestRatingPuzzleIdResponse) GetQueryResult() PuzzleQueryResult {
	if x != nil {
		return x.QueryResult
	}
	return PuzzleQueryResult_UNSEEN
}

type PuzzleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PuzzleId      string                 `protobuf:"bytes,1,opt,name=puzzle_id,json=puzzleId,proto3" json:"puzzle_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PuzzleRequest) Reset() {
	*x = PuzzleRequest{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PuzzleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuzzleRequest) ProtoMessage() {}

func (x *PuzzleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuzzleRequest.ProtoReflect.Descriptor instead.
func (*PuzzleRequest) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{6}
}

func (x *PuzzleRequest) GetPuzzleId() string {
	if x != nil {
		return x.PuzzleId
	}
	return ""
}

type AnswerResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CorrectAnswer    *macondo.GameEvent     `protobuf:"bytes,1,opt,name=correct_answer,json=correctAnswer,proto3" json:"correct_answer,omitempty"`
	Status           PuzzleStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=puzzle_service.PuzzleStatus" json:"status,omitempty"`
	Attempts         int32                  `protobuf:"varint,3,opt,name=attempts,proto3" json:"attempts,omitempty"`
	GameId           string                 `protobuf:"bytes,4,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	TurnNumber       int32                  `protobuf:"varint,5,opt,name=turn_number,json=turnNumber,proto3" json:"turn_number,omitempty"`
	AfterText        string                 `protobuf:"bytes,6,opt,name=after_text,json=afterText,proto3" json:"after_text,omitempty"`
	NewUserRating    int32                  `protobuf:"varint,7,opt,name=new_user_rating,json=newUserRating,proto3" json:"new_user_rating,omitempty"`
	NewPuzzleRating  int32                  `protobuf:"varint,8,opt,name=new_puzzle_rating,json=newPuzzleRating,proto3" json:"new_puzzle_rating,omitempty"`
	FirstAttemptTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=first_attempt_time,json=firstAttemptTime,proto3" json:"first_attempt_time,omitempty"`
	LastAttemptTime  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_attempt_time,json=lastAttemptTime,proto3" json:"last_attempt_time,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AnswerResponse) Reset() {
	*x = AnswerResponse{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnswerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerResponse) ProtoMessage() {}

func (x *AnswerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerResponse.ProtoReflect.Descriptor instead.
func (*AnswerResponse) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{7}
}

func (x *AnswerResponse) GetCorrectAnswer() *macondo.GameEvent {
	if x != nil {
		return x.CorrectAnswer
	}
	return nil
}

func (x *AnswerResponse) GetStatus() PuzzleStatus {
	if x != nil {
		return x.Status
	}
	return PuzzleStatus_UNANSWERED
}

func (x *AnswerResponse) GetAttempts() int32 {
	if x != nil {
		return x.Attempts
	}
	return 0
}

func (x *AnswerResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *AnswerResponse) GetTurnNumber() int32 {
	if x != nil {
		return x.TurnNumber
	}
	return 0
}

func (x *AnswerResponse) GetAfterText() string {
	if x != nil {
		return x.AfterText
	}
	return ""
}

func (x *AnswerResponse) GetNewUserRating() int32 {
	if x != nil {
		return x.NewUserRating
	}
	return 0
}

func (x *AnswerResponse) GetNewPuzzleRating() int32 {
	if x != nil {
		return x.NewPuzzleRating
	}
	return 0
}

func (x *AnswerResponse) GetFirstAttemptTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstAttemptTime
	}
	return nil
}

func (x *AnswerResponse) GetLastAttemptTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastAttemptTime
	}
	return nil
}

type PuzzleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	History       *macondo.GameHistory   `protobuf:"bytes,1,opt,name=history,proto3" json:"history,omitempty"`
	BeforeText    string                 `protobuf:"bytes,2,opt,name=before_text,json=beforeText,proto3" json:"before_text,omitempty"`
	Answer        *AnswerResponse        `protobuf:"bytes,3,opt,name=answer,proto3" json:"answer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PuzzleResponse) Reset() {
	*x = PuzzleResponse{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PuzzleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuzzleResponse) ProtoMessage() {}

func (x *PuzzleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuzzleResponse.ProtoReflect.Descriptor instead.
func (*PuzzleResponse) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{8}
}

func (x *PuzzleResponse) GetHistory() *macondo.GameHistory {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *PuzzleResponse) GetBeforeText() string {
	if x != nil {
		return x.BeforeText
	}
	return ""
}

func (x *PuzzleResponse) GetAnswer() *AnswerResponse {
	if x != nil {
		return x.Answer
	}
	return nil
}

type SubmissionRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	PuzzleId      string                   `protobuf:"bytes,1,opt,name=puzzle_id,json=puzzleId,proto3" json:"puzzle_id,omitempty"`
	Answer        *ipc.ClientGameplayEvent `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	ShowSolution  bool                     `protobuf:"varint,3,opt,name=show_solution,json=showSolution,proto3" json:"show_solution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmissionRequest) Reset() {
	*x = SubmissionRequest{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionRequest) ProtoMessage() {}

func (x *SubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionRequest.ProtoReflect.Descriptor instead.
func (*SubmissionRequest) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{9}
}

func (x *SubmissionRequest) GetPuzzleId() string {
	if x != nil {
		return x.PuzzleId
	}
	return ""
}

func (x *SubmissionRequest) GetAnswer() *ipc.ClientGameplayEvent {
	if x != nil {
		return x.Answer
	}
	return nil
}

func (x *SubmissionRequest) GetShowSolution() bool {
	if x != nil {
		return x.ShowSolution
	}
	return false
}

type SubmissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserIsCorrect bool                   `protobuf:"varint,1,opt,name=user_is_correct,json=userIsCorrect,proto3" json:"user_is_correct,omitempty"`
	Answer        *AnswerResponse        `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmissionResponse) Reset() {
	*x = SubmissionResponse{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionResponse) ProtoMessage() {}

func (x *SubmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionResponse.ProtoReflect.Descriptor instead.
func (*SubmissionResponse) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{10}
}

func (x *SubmissionResponse) GetUserIsCorrect() bool {
	if x != nil {
		return x.UserIsCorrect
	}
	return false
}

func (x *SubmissionResponse) GetAnswer() *AnswerResponse {
	if x != nil {
		return x.Answer
	}
	return nil
}

type PreviousPuzzleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PuzzleId      string                 `protobuf:"bytes,1,opt,name=puzzle_id,json=puzzleId,proto3" json:"puzzle_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreviousPuzzleRequest) Reset() {
	*x = PreviousPuzzleRequest{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviousPuzzleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviousPuzzleRequest) ProtoMessage() {}

func (x *PreviousPuzzleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviousPuzzleRequest.ProtoReflect.Descriptor instead.
func (*PreviousPuzzleRequest) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{11}
}

func (x *PreviousPuzzleRequest) GetPuzzleId() string {
	if x != nil {
		return x.PuzzleId
	}
	return ""
}

type PreviousPuzzleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PuzzleId      string                 `protobuf:"bytes,1,opt,name=puzzle_id,json=puzzleId,proto3" json:"puzzle_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreviousPuzzleResponse) Reset() {
	*x = PreviousPuzzleResponse{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviousPuzzleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviousPuzzleResponse) ProtoMessage() {}

func (x *PreviousPuzzleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviousPuzzleResponse.ProtoReflect.Descriptor instead.
func (*PreviousPuzzleResponse) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{12}
}

func (x *PreviousPuzzleResponse) GetPuzzleId() string {
	if x != nil {
		return x.PuzzleId
	}
	return ""
}

type PuzzleVoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PuzzleId      string                 `protobuf:"bytes,1,opt,name=puzzle_id,json=puzzleId,proto3" json:"puzzle_id,omitempty"`
	Vote          int32                  `protobuf:"varint,2,opt,name=vote,proto3" json:"vote,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PuzzleVoteRequest) Reset() {
	*x = PuzzleVoteRequest{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PuzzleVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuzzleVoteRequest) ProtoMessage() {}

func (x *PuzzleVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuzzleVoteRequest.ProtoReflect.Descriptor instead.
func (*PuzzleVoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{13}
}

func (x *PuzzleVoteRequest) GetPuzzleId() string {
	if x != nil {
		return x.PuzzleId
	}
	return ""
}

func (x *PuzzleVoteRequest) GetVote() int32 {
	if x != nil {
		return x.Vote
	}
	return 0
}

type PuzzleVoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PuzzleVoteResponse) Reset() {
	*x = PuzzleVoteResponse{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PuzzleVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuzzleVoteResponse) ProtoMessage() {}

func (x *PuzzleVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuzzleVoteResponse.ProtoReflect.Descriptor instead.
func (*PuzzleVoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{14}
}

type PuzzleGenerationJobRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	BotVsBot           bool                   `protobuf:"varint,1,opt,name=bot_vs_bot,json=botVsBot,proto3" json:"bot_vs_bot,omitempty"`
	Lexicon            string                 `protobuf:"bytes,2,opt,name=lexicon,proto3" json:"lexicon,omitempty"`
	LetterDistribution string                 `protobuf:"bytes,3,opt,name=letter_distribution,json=letterDistribution,proto3" json:"letter_distribution,omitempty"`
	// Deprecated: Marked as deprecated in proto/puzzle_service/puzzle_service.proto.
	SqlOffset              int32                            `protobuf:"varint,4,opt,name=sql_offset,json=sqlOffset,proto3" json:"sql_offset,omitempty"`
	GameConsiderationLimit int32                            `protobuf:"varint,5,opt,name=game_consideration_limit,json=gameConsiderationLimit,proto3" json:"game_consideration_limit,omitempty"`
	GameCreationLimit      int32                            `protobuf:"varint,6,opt,name=game_creation_limit,json=gameCreationLimit,proto3" json:"game_creation_limit,omitempty"`
	Request                *macondo.PuzzleGenerationRequest `protobuf:"bytes,7,opt,name=request,proto3" json:"request,omitempty"`
	// start_date is just a YYYY-MM-DD date at which we should
	// start looking for games (in non bot_v_bot), and go backwards
	// from there.
	StartDate            string `protobuf:"bytes,8,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EquityLossTotalLimit uint32 `protobuf:"varint,9,opt,name=equity_loss_total_limit,json=equityLossTotalLimit,proto3" json:"equity_loss_total_limit,omitempty"`
	AvoidBotGames        bool   `protobuf:"varint,10,opt,name=avoid_bot_games,json=avoidBotGames,proto3" json:"avoid_bot_games,omitempty"`
	DaysPerChunk         uint32 `protobuf:"varint,11,opt,name=days_per_chunk,json=daysPerChunk,proto3" json:"days_per_chunk,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PuzzleGenerationJobRequest) Reset() {
	*x = PuzzleGenerationJobRequest{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PuzzleGenerationJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuzzleGenerationJobRequest) ProtoMessage() {}

func (x *PuzzleGenerationJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuzzleGenerationJobRequest.ProtoReflect.Descriptor instead.
func (*PuzzleGenerationJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{15}
}

func (x *PuzzleGenerationJobRequest) GetBotVsBot() bool {
	if x != nil {
		return x.BotVsBot
	}
	return false
}

func (x *PuzzleGenerationJobRequest) GetLexicon() string {
	if x != nil {
		return x.Lexicon
	}
	return ""
}

func (x *PuzzleGenerationJobRequest) GetLetterDistribution() string {
	if x != nil {
		return x.LetterDistribution
	}
	return ""
}

// Deprecated: Marked as deprecated in proto/puzzle_service/puzzle_service.proto.
func (x *PuzzleGenerationJobRequest) GetSqlOffset() int32 {
	if x != nil {
		return x.SqlOffset
	}
	return 0
}

func (x *PuzzleGenerationJobRequest) GetGameConsiderationLimit() int32 {
	if x != nil {
		return x.GameConsiderationLimit
	}
	return 0
}

func (x *PuzzleGenerationJobRequest) GetGameCreationLimit() int32 {
	if x != nil {
		return x.GameCreationLimit
	}
	return 0
}

func (x *PuzzleGenerationJobRequest) GetRequest() *macondo.PuzzleGenerationRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *PuzzleGenerationJobRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *PuzzleGenerationJobRequest) GetEquityLossTotalLimit() uint32 {
	if x != nil {
		return x.EquityLossTotalLimit
	}
	return 0
}

func (x *PuzzleGenerationJobRequest) GetAvoidBotGames() bool {
	if x != nil {
		return x.AvoidBotGames
	}
	return false
}

func (x *PuzzleGenerationJobRequest) GetDaysPerChunk() uint32 {
	if x != nil {
		return x.DaysPerChunk
	}
	return 0
}

type APIPuzzleGenerationJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Started       bool                   `protobuf:"varint,1,opt,name=started,proto3" json:"started,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIPuzzleGenerationJobResponse) Reset() {
	*x = APIPuzzleGenerationJobResponse{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIPuzzleGenerationJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIPuzzleGenerationJobResponse) ProtoMessage() {}

func (x *APIPuzzleGenerationJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIPuzzleGenerationJobResponse.ProtoReflect.Descriptor instead.
func (*APIPuzzleGenerationJobResponse) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{16}
}

func (x *APIPuzzleGenerationJobResponse) GetStarted() bool {
	if x != nil {
		return x.Started
	}
	return false
}

type APIPuzzleGenerationJobRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Request       *PuzzleGenerationJobRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	SecretKey     string                      `protobuf:"bytes,2,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIPuzzleGenerationJobRequest) Reset() {
	*x = APIPuzzleGenerationJobRequest{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIPuzzleGenerationJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIPuzzleGenerationJobRequest) ProtoMessage() {}

func (x *APIPuzzleGenerationJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIPuzzleGenerationJobRequest.ProtoReflect.Descriptor instead.
func (*APIPuzzleGenerationJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{17}
}

func (x *APIPuzzleGenerationJobRequest) GetRequest() *PuzzleGenerationJobRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *APIPuzzleGenerationJobRequest) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

type PuzzleJobLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offset        int32                  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PuzzleJobLogsRequest) Reset() {
	*x = PuzzleJobLogsRequest{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PuzzleJobLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuzzleJobLogsRequest) ProtoMessage() {}

func (x *PuzzleJobLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuzzleJobLogsRequest.ProtoReflect.Descriptor instead.
func (*PuzzleJobLogsRequest) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{18}
}

func (x *PuzzleJobLogsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PuzzleJobLogsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type PuzzleJobLog struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Id            int64                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Request       *PuzzleGenerationJobRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	Fulfilled     bool                        `protobuf:"varint,3,opt,name=fulfilled,proto3" json:"fulfilled,omitempty"`
	ErrorStatus   string                      `protobuf:"bytes,4,opt,name=error_status,json=errorStatus,proto3" json:"error_status,omitempty"`
	CreatedAt     *timestamppb.Timestamp      `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CompletedAt   *timestamppb.Timestamp      `protobuf:"bytes,6,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PuzzleJobLog) Reset() {
	*x = PuzzleJobLog{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PuzzleJobLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuzzleJobLog) ProtoMessage() {}

func (x *PuzzleJobLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuzzleJobLog.ProtoReflect.Descriptor instead.
func (*PuzzleJobLog) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{19}
}

func (x *PuzzleJobLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PuzzleJobLog) GetRequest() *PuzzleGenerationJobRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *PuzzleJobLog) GetFulfilled() bool {
	if x != nil {
		return x.Fulfilled
	}
	return false
}

func (x *PuzzleJobLog) GetErrorStatus() string {
	if x != nil {
		return x.ErrorStatus
	}
	return ""
}

func (x *PuzzleJobLog) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PuzzleJobLog) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

type PuzzleJobLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*PuzzleJobLog        `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PuzzleJobLogsResponse) Reset() {
	*x = PuzzleJobLogsResponse{}
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PuzzleJobLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PuzzleJobLogsResponse) ProtoMessage() {}

func (x *PuzzleJobLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_puzzle_service_puzzle_service_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PuzzleJobLogsResponse.ProtoReflect.Descriptor instead.
func (*PuzzleJobLogsResponse) Descriptor() ([]byte, []int) {
	return file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP(), []int{20}
}

func (x *PuzzleJobLogsResponse) GetLogs() []*PuzzleJobLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

var File_proto_puzzle_service_puzzle_service_proto protoreflect.FileDescriptor

const file_proto_puzzle_service_puzzle_service_proto_rawDesc = "" +
	"\n" +
	")proto/puzzle_service/puzzle_service.proto\x12\x0epuzzle_service\x1a\x1cvendor/macondo/macondo.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x18proto/ipc/omgwords.proto\"0\n" +
	"\x14StartPuzzleIdRequest\x12\x18\n" +
	"\alexicon\x18\x01 \x01(\tR\alexicon\"z\n" +
	"\x15StartPuzzleIdResponse\x12\x1b\n" +
	"\tpuzzle_id\x18\x01 \x01(\tR\bpuzzleId\x12D\n" +
	"\fquery_result\x18\x02 \x01(\x0e2!.puzzle_service.PuzzleQueryResultR\vqueryResult\"/\n" +
	"\x13NextPuzzleIdRequest\x12\x18\n" +
	"\alexicon\x18\x01 \x01(\tR\alexicon\"y\n" +
	"\x14NextPuzzleIdResponse\x12\x1b\n" +
	"\tpuzzle_id\x18\x01 \x01(\tR\bpuzzleId\x12D\n" +
	"\fquery_result\x18\x02 \x01(\x0e2!.puzzle_service.PuzzleQueryResultR\vqueryResult\"<\n" +
	" NextClosestRatingPuzzleIdRequest\x12\x18\n" +
	"\alexicon\x18\x01 \x01(\tR\alexicon\"\x86\x01\n" +
	"!NextClosestRatingPuzzleIdResponse\x12\x1b\n" +
	"\tpuzzle_id\x18\x01 \x01(\tR\bpuzzleId\x12D\n" +
	"\fquery_result\x18\x02 \x01(\x0e2!.puzzle_service.PuzzleQueryResultR\vqueryResult\",\n" +
	"\rPuzzleRequest\x12\x1b\n" +
	"\tpuzzle_id\x18\x01 \x01(\tR\bpuzzleId\"\xdc\x03\n" +
	"\x0eAnswerResponse\x129\n" +
	"\x0ecorrect_answer\x18\x01 \x01(\v2\x12.macondo.GameEventR\rcorrectAnswer\x124\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1c.puzzle_service.PuzzleStatusR\x06status\x12\x1a\n" +
	"\battempts\x18\x03 \x01(\x05R\battempts\x12\x17\n" +
	"\agame_id\x18\x04 \x01(\tR\x06gameId\x12\x1f\n" +
	"\vturn_number\x18\x05 \x01(\x05R\n" +
	"turnNumber\x12\x1d\n" +
	"\n" +
	"after_text\x18\x06 \x01(\tR\tafterText\x12&\n" +
	"\x0fnew_user_rating\x18\a \x01(\x05R\rnewUserRating\x12*\n" +
	"\x11new_puzzle_rating\x18\b \x01(\x05R\x0fnewPuzzleRating\x12H\n" +
	"\x12first_attempt_time\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\x10firstAttemptTime\x12F\n" +
	"\x11last_attempt_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x0flastAttemptTime\"\x99\x01\n" +
	"\x0ePuzzleResponse\x12.\n" +
	"\ahistory\x18\x01 \x01(\v2\x14.macondo.GameHistoryR\ahistory\x12\x1f\n" +
	"\vbefore_text\x18\x02 \x01(\tR\n" +
	"beforeText\x126\n" +
	"\x06answer\x18\x03 \x01(\v2\x1e.puzzle_service.AnswerResponseR\x06answer\"\x87\x01\n" +
	"\x11SubmissionRequest\x12\x1b\n" +
	"\tpuzzle_id\x18\x01 \x01(\tR\bpuzzleId\x120\n" +
	"\x06answer\x18\x02 \x01(\v2\x18.ipc.ClientGameplayEventR\x06answer\x12#\n" +
	"\rshow_solution\x18\x03 \x01(\bR\fshowSolution\"t\n" +
	"\x12SubmissionResponse\x12&\n" +
	"\x0fuser_is_correct\x18\x01 \x01(\bR\ruserIsCorrect\x126\n" +
	"\x06answer\x18\x02 \x01(\v2\x1e.puzzle_service.AnswerResponseR\x06answer\"4\n" +
	"\x15PreviousPuzzleRequest\x12\x1b\n" +
	"\tpuzzle_id\x18\x01 \x01(\tR\bpuzzleId\"5\n" +
	"\x16PreviousPuzzleResponse\x12\x1b\n" +
	"\tpuzzle_id\x18\x01 \x01(\tR\bpuzzleId\"D\n" +
	"\x11PuzzleVoteRequest\x12\x1b\n" +
	"\tpuzzle_id\x18\x01 \x01(\tR\bpuzzleId\x12\x12\n" +
	"\x04vote\x18\x02 \x01(\x05R\x04vote\"\x14\n" +
	"\x12PuzzleVoteResponse\"\xf2\x03\n" +
	"\x1aPuzzleGenerationJobRequest\x12\x1c\n" +
	"\n" +
	"bot_vs_bot\x18\x01 \x01(\bR\bbotVsBot\x12\x18\n" +
	"\alexicon\x18\x02 \x01(\tR\alexicon\x12/\n" +
	"\x13letter_distribution\x18\x03 \x01(\tR\x12letterDistribution\x12!\n" +
	"\n" +
	"sql_offset\x18\x04 \x01(\x05B\x02\x18\x01R\tsqlOffset\x128\n" +
	"\x18game_consideration_limit\x18\x05 \x01(\x05R\x16gameConsiderationLimit\x12.\n" +
	"\x13game_creation_limit\x18\x06 \x01(\x05R\x11gameCreationLimit\x12:\n" +
	"\arequest\x18\a \x01(\v2 .macondo.PuzzleGenerationRequestR\arequest\x12\x1d\n" +
	"\n" +
	"start_date\x18\b \x01(\tR\tstartDate\x125\n" +
	"\x17equity_loss_total_limit\x18\t \x01(\rR\x14equityLossTotalLimit\x12&\n" +
	"\x0favoid_bot_games\x18\n" +
	" \x01(\bR\ravoidBotGames\x12$\n" +
	"\x0edays_per_chunk\x18\v \x01(\rR\fdaysPerChunk\":\n" +
	"\x1eAPIPuzzleGenerationJobResponse\x12\x18\n" +
	"\astarted\x18\x01 \x01(\bR\astarted\"\x84\x01\n" +
	"\x1dAPIPuzzleGenerationJobRequest\x12D\n" +
	"\arequest\x18\x01 \x01(\v2*.puzzle_service.PuzzleGenerationJobRequestR\arequest\x12\x1d\n" +
	"\n" +
	"secret_key\x18\x02 \x01(\tR\tsecretKey\"D\n" +
	"\x14PuzzleJobLogsRequest\x12\x16\n" +
	"\x06offset\x18\x01 \x01(\x05R\x06offset\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"\x9f\x02\n" +
	"\fPuzzleJobLog\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12D\n" +
	"\arequest\x18\x02 \x01(\v2*.puzzle_service.PuzzleGenerationJobRequestR\arequest\x12\x1c\n" +
	"\tfulfilled\x18\x03 \x01(\bR\tfulfilled\x12!\n" +
	"\ferror_status\x18\x04 \x01(\tR\verrorStatus\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12=\n" +
	"\fcompleted_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\"I\n" +
	"\x15PuzzleJobLogsResponse\x120\n" +
	"\x04logs\x18\x01 \x03(\v2\x1c.puzzle_service.PuzzleJobLogR\x04logs*b\n" +
	"\x11PuzzleQueryResult\x12\n" +
	"\n" +
	"\x06UNSEEN\x10\x00\x12\v\n" +
	"\aUNRATED\x10\x01\x12\x0e\n" +
	"\n" +
	"UNFINISHED\x10\x02\x12\r\n" +
	"\tEXHAUSTED\x10\x03\x12\n" +
	"\n" +
	"\x06RANDOM\x10\x04\x12\t\n" +
	"\x05START\x10\x05*:\n" +
	"\fPuzzleStatus\x12\x0e\n" +
	"\n" +
	"UNANSWERED\x10\x00\x12\v\n" +
	"\aCORRECT\x10\x01\x12\r\n" +
	"\tINCORRECT\x10\x022\xdc\a\n" +
	"\rPuzzleService\x12_\n" +
	"\x10GetStartPuzzleId\x12$.puzzle_service.StartPuzzleIdRequest\x1a%.puzzle_service.StartPuzzleIdResponse\x12\\\n" +
	"\x0fGetNextPuzzleId\x12#.puzzle_service.NextPuzzleIdRequest\x1a$.puzzle_service.NextPuzzleIdResponse\x12\x83\x01\n" +
	"\x1cGetNextClosestRatingPuzzleId\x120.puzzle_service.NextClosestRatingPuzzleIdRequest\x1a1.puzzle_service.NextClosestRatingPuzzleIdResponse\x12J\n" +
	"\tGetPuzzle\x12\x1d.puzzle_service.PuzzleRequest\x1a\x1e.puzzle_service.PuzzleResponse\x12U\n" +
	"\fSubmitAnswer\x12!.puzzle_service.SubmissionRequest\x1a\".puzzle_service.SubmissionResponse\x12P\n" +
	"\x0fGetPuzzleAnswer\x12\x1d.puzzle_service.PuzzleRequest\x1a\x1e.puzzle_service.AnswerResponse\x12d\n" +
	"\x13GetPreviousPuzzleId\x12%.puzzle_service.PreviousPuzzleRequest\x1a&.puzzle_service.PreviousPuzzleResponse\x12V\n" +
	"\rSetPuzzleVote\x12!.puzzle_service.PuzzleVoteRequest\x1a\".puzzle_service.PuzzleVoteResponse\x12r\n" +
	"\x11StartPuzzleGenJob\x12-.puzzle_service.APIPuzzleGenerationJobRequest\x1a..puzzle_service.APIPuzzleGenerationJobResponse\x12_\n" +
	"\x10GetPuzzleJobLogs\x12$.puzzle_service.PuzzleJobLogsRequest\x1a%.puzzle_service.PuzzleJobLogsResponseB\xb8\x01\n" +
	"\x12com.puzzle_serviceB\x12PuzzleServiceProtoP\x01Z:github.com/woogles-io/liwords/rpc/api/proto/puzzle_service\xa2\x02\x03PXX\xaa\x02\rPuzzleService\xca\x02\rPuzzleService\xe2\x02\x19PuzzleService\\GPBMetadata\xea\x02\rPuzzleServiceb\x06proto3"

var (
	file_proto_puzzle_service_puzzle_service_proto_rawDescOnce sync.Once
	file_proto_puzzle_service_puzzle_service_proto_rawDescData []byte
)

func file_proto_puzzle_service_puzzle_service_proto_rawDescGZIP() []byte {
	file_proto_puzzle_service_puzzle_service_proto_rawDescOnce.Do(func() {
		file_proto_puzzle_service_puzzle_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_puzzle_service_puzzle_service_proto_rawDesc), len(file_proto_puzzle_service_puzzle_service_proto_rawDesc)))
	})
	return file_proto_puzzle_service_puzzle_service_proto_rawDescData
}

var file_proto_puzzle_service_puzzle_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_puzzle_service_puzzle_service_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_proto_puzzle_service_puzzle_service_proto_goTypes = []any{
	(PuzzleQueryResult)(0),                    // 0: puzzle_service.PuzzleQueryResult
	(PuzzleStatus)(0),                         // 1: puzzle_service.PuzzleStatus
	(*StartPuzzleIdRequest)(nil),              // 2: puzzle_service.StartPuzzleIdRequest
	(*StartPuzzleIdResponse)(nil),             // 3: puzzle_service.StartPuzzleIdResponse
	(*NextPuzzleIdRequest)(nil),               // 4: puzzle_service.NextPuzzleIdRequest
	(*NextPuzzleIdResponse)(nil),              // 5: puzzle_service.NextPuzzleIdResponse
	(*NextClosestRatingPuzzleIdRequest)(nil),  // 6: puzzle_service.NextClosestRatingPuzzleIdRequest
	(*NextClosestRatingPuzzleIdResponse)(nil), // 7: puzzle_service.NextClosestRatingPuzzleIdResponse
	(*PuzzleRequest)(nil),                     // 8: puzzle_service.PuzzleRequest
	(*AnswerResponse)(nil),                    // 9: puzzle_service.AnswerResponse
	(*PuzzleResponse)(nil),                    // 10: puzzle_service.PuzzleResponse
	(*SubmissionRequest)(nil),                 // 11: puzzle_service.SubmissionRequest
	(*SubmissionResponse)(nil),                // 12: puzzle_service.SubmissionResponse
	(*PreviousPuzzleRequest)(nil),             // 13: puzzle_service.PreviousPuzzleRequest
	(*PreviousPuzzleResponse)(nil),            // 14: puzzle_service.PreviousPuzzleResponse
	(*PuzzleVoteRequest)(nil),                 // 15: puzzle_service.PuzzleVoteRequest
	(*PuzzleVoteResponse)(nil),                // 16: puzzle_service.PuzzleVoteResponse
	(*PuzzleGenerationJobRequest)(nil),        // 17: puzzle_service.PuzzleGenerationJobRequest
	(*APIPuzzleGenerationJobResponse)(nil),    // 18: puzzle_service.APIPuzzleGenerationJobResponse
	(*APIPuzzleGenerationJobRequest)(nil),     // 19: puzzle_service.APIPuzzleGenerationJobRequest
	(*PuzzleJobLogsRequest)(nil),              // 20: puzzle_service.PuzzleJobLogsRequest
	(*PuzzleJobLog)(nil),                      // 21: puzzle_service.PuzzleJobLog
	(*PuzzleJobLogsResponse)(nil),             // 22: puzzle_service.PuzzleJobLogsResponse
	(*macondo.GameEvent)(nil),                 // 23: macondo.GameEvent
	(*timestamppb.Timestamp)(nil),             // 24: google.protobuf.Timestamp
	(*macondo.GameHistory)(nil),               // 25: macondo.GameHistory
	(*ipc.ClientGameplayEvent)(nil),           // 26: ipc.ClientGameplayEvent
	(*macondo.PuzzleGenerationRequest)(nil),   // 27: macondo.PuzzleGenerationRequest
}
var file_proto_puzzle_service_puzzle_service_proto_depIdxs = []int32{
	0,  // 0: puzzle_service.StartPuzzleIdResponse.query_result:type_name -> puzzle_service.PuzzleQueryResult
	0,  // 1: puzzle_service.NextPuzzleIdResponse.query_result:type_name -> puzzle_service.PuzzleQueryResult
	0,  // 2: puzzle_service.NextClosestRatingPuzzleIdResponse.query_result:type_name -> puzzle_service.PuzzleQueryResult
	23, // 3: puzzle_service.AnswerResponse.correct_answer:type_name -> macondo.GameEvent
	1,  // 4: puzzle_service.AnswerResponse.status:type_name -> puzzle_service.PuzzleStatus
	24, // 5: puzzle_service.AnswerResponse.first_attempt_time:type_name -> google.protobuf.Timestamp
	24, // 6: puzzle_service.AnswerResponse.last_attempt_time:type_name -> google.protobuf.Timestamp
	25, // 7: puzzle_service.PuzzleResponse.history:type_name -> macondo.GameHistory
	9,  // 8: puzzle_service.PuzzleResponse.answer:type_name -> puzzle_service.AnswerResponse
	26, // 9: puzzle_service.SubmissionRequest.answer:type_name -> ipc.ClientGameplayEvent
	9,  // 10: puzzle_service.SubmissionResponse.answer:type_name -> puzzle_service.AnswerResponse
	27, // 11: puzzle_service.PuzzleGenerationJobRequest.request:type_name -> macondo.PuzzleGenerationRequest
	17, // 12: puzzle_service.APIPuzzleGenerationJobRequest.request:type_name -> puzzle_service.PuzzleGenerationJobRequest
	17, // 13: puzzle_service.PuzzleJobLog.request:type_name -> puzzle_service.PuzzleGenerationJobRequest
	24, // 14: puzzle_service.PuzzleJobLog.created_at:type_name -> google.protobuf.Timestamp
	24, // 15: puzzle_service.PuzzleJobLog.completed_at:type_name -> google.protobuf.Timestamp
	21, // 16: puzzle_service.PuzzleJobLogsResponse.logs:type_name -> puzzle_service.PuzzleJobLog
	2,  // 17: puzzle_service.PuzzleService.GetStartPuzzleId:input_type -> puzzle_service.StartPuzzleIdRequest
	4,  // 18: puzzle_service.PuzzleService.GetNextPuzzleId:input_type -> puzzle_service.NextPuzzleIdRequest
	6,  // 19: puzzle_service.PuzzleService.GetNextClosestRatingPuzzleId:input_type -> puzzle_service.NextClosestRatingPuzzleIdRequest
	8,  // 20: puzzle_service.PuzzleService.GetPuzzle:input_type -> puzzle_service.PuzzleRequest
	11, // 21: puzzle_service.PuzzleService.SubmitAnswer:input_type -> puzzle_service.SubmissionRequest
	8,  // 22: puzzle_service.PuzzleService.GetPuzzleAnswer:input_type -> puzzle_service.PuzzleRequest
	13, // 23: puzzle_service.PuzzleService.GetPreviousPuzzleId:input_type -> puzzle_service.PreviousPuzzleRequest
	15, // 24: puzzle_service.PuzzleService.SetPuzzleVote:input_type -> puzzle_service.PuzzleVoteRequest
	19, // 25: puzzle_service.PuzzleService.StartPuzzleGenJob:input_type -> puzzle_service.APIPuzzleGenerationJobRequest
	20, // 26: puzzle_service.PuzzleService.GetPuzzleJobLogs:input_type -> puzzle_service.PuzzleJobLogsRequest
	3,  // 27: puzzle_service.PuzzleService.GetStartPuzzleId:output_type -> puzzle_service.StartPuzzleIdResponse
	5,  // 28: puzzle_service.PuzzleService.GetNextPuzzleId:output_type -> puzzle_service.NextPuzzleIdResponse
	7,  // 29: puzzle_service.PuzzleService.GetNextClosestRatingPuzzleId:output_type -> puzzle_service.NextClosestRatingPuzzleIdResponse
	10, // 30: puzzle_service.PuzzleService.GetPuzzle:output_type -> puzzle_service.PuzzleResponse
	12, // 31: puzzle_service.PuzzleService.SubmitAnswer:output_type -> puzzle_service.SubmissionResponse
	9,  // 32: puzzle_service.PuzzleService.GetPuzzleAnswer:output_type -> puzzle_service.AnswerResponse
	14, // 33: puzzle_service.PuzzleService.GetPreviousPuzzleId:output_type -> puzzle_service.PreviousPuzzleResponse
	16, // 34: puzzle_service.PuzzleService.SetPuzzleVote:output_type -> puzzle_service.PuzzleVoteResponse
	18, // 35: puzzle_service.PuzzleService.StartPuzzleGenJob:output_type -> puzzle_service.APIPuzzleGenerationJobResponse
	22, // 36: puzzle_service.PuzzleService.GetPuzzleJobLogs:output_type -> puzzle_service.PuzzleJobLogsResponse
	27, // [27:37] is the sub-list for method output_type
	17, // [17:27] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_proto_puzzle_service_puzzle_service_proto_init() }
func file_proto_puzzle_service_puzzle_service_proto_init() {
	if File_proto_puzzle_service_puzzle_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_puzzle_service_puzzle_service_proto_rawDesc), len(file_proto_puzzle_service_puzzle_service_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_puzzle_service_puzzle_service_proto_goTypes,
		DependencyIndexes: file_proto_puzzle_service_puzzle_service_proto_depIdxs,
		EnumInfos:         file_proto_puzzle_service_puzzle_service_proto_enumTypes,
		MessageInfos:      file_proto_puzzle_service_puzzle_service_proto_msgTypes,
	}.Build()
	File_proto_puzzle_service_puzzle_service_proto = out.File
	file_proto_puzzle_service_puzzle_service_proto_goTypes = nil
	file_proto_puzzle_service_puzzle_service_proto_depIdxs = nil
}
